{"version":3,"sources":["serviceWorker.js","components/Investments/InvestmentsCard.js","containers/InvestmentsContainer.js","components/Cashflows/DistributionsCardComponent.js","components/Reusable/FunnelChart.js","components/Cashflows/DistroFunnelChart.js","containers/DistributionTotalsContainer.js","components/Main/Cards.js","components/Reusable/PieChart.js","components/Funds/FundsPieChart.js","containers/FundsSizeContainer.js","components/Funds/FundsComponent.js","components/Funds/FundsList.js","containers/FundsContainer.js","components/Cashflows/DistoChart.js","containers/DistributionContainer.js","components/Funds/FundDistroChart.js","containers/DistrbutionTotalsFundsContainer.js","components/Main/Main.js","components/Layout/NavTop.js","components/Layout/NavSide.js","components/Investors/InvestorsTable.js","containers/InvestorsContainer.js","components/Main/Login.js","containers/LoginContainer.js","components/Investors/InvestorDetail.js","containers/InvestorsInvIDContainer.js","App.js","actions/actions.js","AppContainer.js","reducers/reducers.js","store.js","state.js","index.js"],"names":["Boolean","window","location","hostname","match","InvestmentsCard","props","investmentInfo","fundsSize","reduce","a","b","InvID_Count","investmentGrossCapital","Sum_of_Gross_Capital","investmentNetCapital","Sum_of_Net_Capital","react_default","createElement","Fragment","col","span","card","statistic","title","value","precision","valueStyle","color","fontWeight","prefix","icon","type","suffix","connect","state","investments","DistributionsCard","distroTotal","mgmtTotal","servTotal","cfTotals","length","FunnelChartDash","COLORS","className","es6","width","height","data","dataKey","nameKey","map","entry","index","key","concat","fill","position","font-weight","shortName","DistroFunnelChart","spec_distro","gross_distro","tax_distro","comp_distro","name","FunnelChart","mapState","DistroCardsContainer","DistroFunnelContainer","Cards","style","background","padding","es_row","gutter","InvestmentsContainer","PieChartDash","label","legendType","FundsPieChart","PieChart","Funds","funds","row","Fund_ID","Feeder","FundsCard","fundsList","filter","self","indexOf","list","header","bordered","dataSource","minWidth","marginLeft","renderItem","item","Item","FundsCardResult","DistroChart","datesList","distributions","moment","CF_Date","format","tempArray","sort","x","i","Code_Name","Math","round","CF_Amount","push","Spec_Distro","Gross_Distro","Comp_Distro","Tax_Distro","createNewCashflowObject","margin","top","right","left","bottom","id","x1","y1","x2","y2","offset","stopColor","stopOpacity","strokeDasharray","stroke","fillOpacity","DistroChartContainer","FundsDistroChart","distributionsFund","stackId","DistroFundsChartContainer","Main","layout","Main_Cards","FundsSizeContainer","Header","Layout","SubMenu","Menu","NavTop","current","handleClick","e","console","log","_this","setState","menu","maxHeight","display","lineHeight","onClick","this","selectedKeys","mode","fontSize","ItemGroup","React","Component","Sider","NavSide","collapsed","navWidth","onCollapse","maxWidth","minHeight","collapsible","theme","defaultSelectedKeys","react_router_dom","to","NavSide_SubMenu","InvestorsTable","searchText","getColumnSearchProps","dataIndex","filterDropdown","_ref","setSelectedKeys","confirm","clearFilters","input","ref","node","searchInput","placeholder","onChange","target","onPressEnter","handleSearch","marginBottom","es_button","size","marginRight","handleReset","filterIcon","filtered","undefined","onFilter","record","toString","toLowerCase","includes","onFilterDropdownVisibleChange","visible","setTimeout","select","columns","Object","objectSpread","render","text","marginTop","table","investors","InvestorsTableResults","Login","_useState","useState","loginState","_useState2","slicedToArray","loginSet","_useState3","_useState4","userName","userNameSet","_useState5","_useState6","password","passwordSet","useEffect","es_form","defaultValue","handle","htmlType","LoginContainer","InvestorDetail","propsHolder","useSelector","propsDetails","investorsInvID","res","details","propsCash","cashflows","tableData","tableDataSet","barChartData","barChartDataSet","barChartColumns","barChartColumnsSet","_useState7","_useState8","cardDataCash","cardDataCashSet","_useState9","_useState10","cardDataDetail","cardDataDetailSet","_useState11","_useState12","newModalValue","newModalValueSet","_useState13","_useState14","oldModalValues","oldModalValuesSet","getCashFlowTotals","tempObject","Gross Distribution","Special Distribution","Composite Tax Distro","Tax Distribution","Tax Holdback","GP Promote","Management Fee","Servicing Fee","Commission","forEach","array","err","getTableData","JSON","parse","stringify","numeral","Edit","rowClone","parseFloat","setVisible","showModal","tempArrayData","tempArrayColumns","count","cash","element","distrotype","amount","getBarChartData","getCardDataCash","getCardDataDetail","_useState15","_useState16","_useState17","_useState18","confirmLoading","setConfirmLoading","Account_Name","InvID","CID","Inv_Type","Gross_Capital","Net_Capital","Date_Inv","Date_Eliminate","modal","onOk","onCancel","keys","updateModalValues","addonBefore","InvestorDetailResult","updateInvestorCashFlow","Content","App","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleLogin","getComponenets","loginChange","loggedin","loggedout","loadLogin","bind","assertThisInitialized","NavTop_NavTop","NavSide_NavSide","react_router","path","exact","component","loadFunds","loadFundsSize","loadInvestors","loadInvestments","loadDistributions","loadInvestorsInvID","loadcfTotals","loadDistributionsByFund","_this2","unlisten","history","listen","action","withRouter","url","href","split","slice","urlsplit","dispatch","fetch","then","response","json","investorsLoadedInvID","fundsLoaded","fundsSizeLoaded","investmentsLoaded","catch","error","message","distributionsLoaded","investorsLoaded","result","oldValue","newValue","method","headers","Content-Type","body","cfTotalsLoaded","distributionsByFundLoaded","u","loginLoaded","rootReducer","combineReducers","arguments","enhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","thunk","store","createStore","reducers","ReactDOM","es","AppContainer","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3b7bdc72.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Statistic, Card, Col, Icon } from 'antd'\r\n\r\nfunction InvestmentsCard(props) {\r\n    let investmentInfo = props.fundsSize.reduce((a, b)=>a + b.InvID_Count,0)\r\n    let investmentGrossCapital = props.fundsSize.reduce((a, b)=>a + b.Sum_of_Gross_Capital,0)\r\n    let investmentNetCapital = props.fundsSize.reduce((a, b)=>a + b.Sum_of_Net_Capital,0)\r\n  return (\r\n    <React.Fragment>\r\n        <Col span={3}>\r\n            <Card>\r\n                <Statistic\r\n                title=\"Current Investments\"\r\n                value={investmentInfo}\r\n                precision={0}\r\n                valueStyle={{ color: '#05386b', fontWeight: 'bold' }}\r\n                prefix={<Icon type=\"user\"/>}\r\n                suffix=\"\"\r\n                />\r\n            </Card>\r\n        </Col>\r\n        <Col span={4}>\r\n            <Card>\r\n                <Statistic\r\n                title=\"Total Gross Capital\"\r\n                value={investmentGrossCapital}\r\n                precision={0}\r\n                valueStyle={{ color: '#05386b', fontWeight: 'bold' }}\r\n                prefix=\"$\"\r\n                suffix=\"\"\r\n                />\r\n            </Card>\r\n        </Col>\r\n        <Col span={4}>\r\n            <Card>\r\n                <Statistic\r\n                title=\"Total Net Capital\"\r\n                value={investmentNetCapital}\r\n                precision={0}\r\n                valueStyle={{ color: '#05386b', fontWeight: 'bold' }}\r\n                prefix=\"$\"\r\n                suffix=\"\"\r\n                />\r\n            </Card>\r\n        </Col>\r\n    </React.Fragment>\r\n  );\r\n}\r\nexport default InvestmentsCard;","import { connect } from \"react-redux\";\r\nimport InvestmentsCard from \"../components/Investments/InvestmentsCard\";\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    investments: state.investments,\r\n    fundsSize: state.fundsSize\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(InvestmentsCard);","import React from \"react\";\r\nimport { Statistic, Card, Col } from 'antd'\r\n\r\nfunction DistributionsCard(props) {\r\n    let distroTotal\r\n    let mgmtTotal\r\n    let servTotal\r\n    let feeValues =()=>{\r\n      if (props.cfTotals.length > 0) {\r\n        distroTotal = props.cfTotals[0]['Gross']+props.cfTotals[0]['Special']+props.cfTotals[0]['Tax']+props.cfTotals[0]['Composite']\r\n        mgmtTotal = props.cfTotals[0]['Management']\r\n        servTotal = props.cfTotals[0]['Servicing']\r\n      }\r\n      return {mgmtTotal, servTotal}\r\n    }\r\n    feeValues()\r\n  return (\r\n    <React.Fragment>\r\n        <Col span={4}>\r\n            <Card>\r\n                <Statistic\r\n                title=\"Total Distributions Paid\"\r\n                precision={0}\r\n                valueStyle={{ color: '#05386b', fontWeight: 'bold' }}\r\n                prefix=\"$\"\r\n                suffix=\"\"\r\n                value={distroTotal}\r\n                >\r\n                </Statistic>\r\n            </Card>\r\n        </Col>\r\n        <Col span={4}>\r\n            <Card>\r\n                <Statistic\r\n                title=\"Total Management Fees Paid\"\r\n                precision={0}\r\n                valueStyle={{ color: '#05386b', fontWeight: 'bold' }}\r\n                prefix=\"$\"\r\n                suffix=\"\"\r\n                value={mgmtTotal}\r\n                >\r\n                </Statistic>\r\n            </Card>\r\n          </Col>\r\n          <Col span={4}>\r\n            <Card>\r\n                <Statistic\r\n                title=\"Total Servicing Fees Paid\"\r\n                precision={0}\r\n                valueStyle={{ color: '#05386b', fontWeight: 'bold' }}\r\n                prefix=\"$\"\r\n                suffix=\"\"\r\n                value={servTotal}\r\n                >\r\n                </Statistic>\r\n            </Card>\r\n        </Col>\r\n    </React.Fragment>\r\n  );\r\n}\r\nexport default DistributionsCard;","import React from \"react\";\r\nimport { FunnelChart, Tooltip, Funnel, LabelList, Cell } from \"recharts\"\r\n\r\nfunction FunnelChartDash(props) {\r\n  const COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042'];\r\n  return (\r\n    <div className='autoMargin'>\r\n      <h3>{props.title}</h3>\r\n      <FunnelChart width={600} height={400} >\r\n          <Tooltip/>\r\n          <Funnel data={props.data} dataKey={props.dataKey} nameKey={props.nameKey}>\r\n            {props.data.map((entry, index) => <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />)}\r\n            <LabelList position=\"center\" fill=\"#ffffff\" font-weight=\"bold\" dataKey={props.shortName}/>\r\n          </Funnel>\r\n      </FunnelChart >\r\n    </div>\r\n  );\r\n}\r\nexport default FunnelChartDash;","import React from \"react\";\r\nimport FunnelChartDash from '../Reusable/FunnelChart'\r\n\r\n//Proivde $ comparison between different distribution types\r\nfunction DistroFunnelChart(props) {\r\n    let data = () =>{\r\n        let spec_distro \r\n        let gross_distro \r\n        let tax_distro \r\n        let comp_distro \r\n         if(props.cfTotals.length>0){\r\n             spec_distro = props.cfTotals[0][\"Special\"]\r\n             gross_distro = props.cfTotals[0][\"Gross\"]\r\n             tax_distro = props.cfTotals[0][\"Tax\"]\r\n             comp_distro = props.cfTotals[0][\"Composite\"]\r\n            } \r\n        return data = [\r\n            {name:'Special Distribution', value: spec_distro, shortName:'Special'},\r\n            {name:'Gross Distribution', value: gross_distro, shortName:'Gross'},\r\n            {name:'Composite Distribution', value: comp_distro, shortName:'Composite'},\r\n            {name:'Tax Distribution', value: tax_distro,  shortName:'Tax'},\r\n        ]\r\n    }\r\n  return (\r\n    <div className='autoMargin'>\r\n      <FunnelChartDash data={data()} title='Distribution by Type' dataKey='value' nameKey='name' shortName='shortName'/>\r\n    </div>\r\n  )\r\n}\r\nexport default DistroFunnelChart;","import { connect } from \"react-redux\";\r\nimport DistributionsCard from '../components/Cashflows/DistributionsCardComponent';\r\nimport DistroFunnelChart from '../components/Cashflows/DistroFunnelChart'\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    cfTotals: state.cfTotals\r\n  };\r\n}\r\n\r\nconst mapState= connect(mapStateToProps)\r\nexport const DistroCardsContainer = mapState(DistributionsCard)\r\nexport const DistroFunnelContainer = mapState(DistroFunnelChart)","import React from \"react\";\r\nimport { Row } from 'antd'\r\nimport InvestmentsContainer from '../../containers/InvestmentsContainer'\r\nimport { DistroCardsContainer } from '../../containers/DistributionTotalsContainer'\r\n\r\nfunction Cards(){\r\n    return(\r\n        <div style={{ background: '#ECECEC', padding: '25px' }}>\r\n        <Row gutter={15}>\r\n            <InvestmentsContainer/>\r\n            <DistroCardsContainer/>\r\n        </Row>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Cards\r\n","import React from \"react\";\r\nimport { PieChart, Pie, Cell, Legend } from \"recharts\"\r\n\r\nfunction PieChartDash(props) {\r\n  const COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042'];\r\n  return (\r\n    <div>\r\n      <h3>{props.title}</h3>\r\n      <PieChart width={500} height={500} >\r\n          <Pie data={props.data} dataKey={props.dataKey} nameKey={props.nameKey} label legendType=\"square\"  fill=\"#000\">\r\n            {props.data.map((entry, index) => <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />)}\r\n          </Pie>\r\n          <Legend/>\r\n      </PieChart >\r\n    </div>\r\n  );\r\n}\r\nexport default PieChartDash;","import React from \"react\";\r\nimport PieChartDash from '../Reusable/PieChart'\r\n\r\n//Proivde $ comparison between funds\r\nfunction FundsPieChart(props) {\r\n  return (\r\n    <div className='autoMargin'>\r\n      <PieChartDash data={props.fundsSize} title='Fund Size' dataKey='Sum_of_Gross_Capital' nameKey='Fund_ID'/>\r\n    </div>\r\n  )\r\n}\r\nexport default FundsPieChart;\r\n","import { connect } from \"react-redux\";\r\nimport FundsPieChart from \"../components/Funds/FundsPieChart\";\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    fundsSize: state.fundsSize\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(FundsPieChart);","import React from \"react\";\r\n\r\nfunction Funds(props) {\r\n  return (\r\n    <div>\r\n    <p className=\"App-intro\">{props.funds.map((row,index) => (\r\n        <li key={index}>  {row.Fund_ID}, {row.Feeder} </li>\r\n      ))}</p>\r\n    </div>\r\n  );\r\n}\r\nexport default Funds;","import React from \"react\";\r\nimport { List } from 'antd'\r\n\r\nfunction FundsCard(props) {\r\n    const distinct = (value, index, self)=>{\r\n        return self.indexOf(value) === index\r\n    }\r\n    let fundsListArray = props.funds.map((row)=> row.Fund_ID)\r\n    let fundsList = fundsListArray.filter(distinct)\r\n\r\n  return (\r\n    <div>\r\n        <List\r\n        header={<div>Fund List</div>}\r\n        bordered\r\n        dataSource={fundsList}\r\n        style={{minWidth: 550, marginLeft: 200}}\r\n        renderItem={item => (\r\n            <List.Item>\r\n            {/* <Typography.Text mark>[ITEM]</Typography.Text>*/} {item} \r\n            </List.Item>\r\n        )}\r\n        />\r\n    </div>\r\n  );\r\n}\r\nexport default FundsCard;","import { connect } from \"react-redux\";\r\nimport Funds from \"../components/Funds/FundsComponent\";\r\nimport FundsCard from '../components/Funds/FundsList'\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    funds: state.funds\r\n  };\r\n}\r\n\r\nconst mapState= connect(mapStateToProps)\r\nexport const FundsResult = mapState(Funds)\r\nexport const FundsCardResult = mapState(FundsCard)","import React from \"react\";\r\nimport { AreaChart, XAxis, YAxis, CartesianGrid, Tooltip, Area } from 'recharts'\r\nimport moment from 'moment'\r\n\r\nfunction DistroChart(props) {\r\n    //This is to get the unique date values as well as format the dates\r\n    const distinct = (value, index, self)=>{\r\n        return self.indexOf(value) === index\r\n    }\r\n    let distoDatesArray = props.distributions.map((row)=> moment(row.CF_Date).format('MM/YY'))\r\n    let datesList = distoDatesArray.filter(distinct)\r\n    function createNewCashflowObject(){\r\n        let tempArray = []\r\n        datesList = datesList.sort()\r\n        for (let x=0; x < datesList.length; x++){\r\n            let spec_distro = 0\r\n            let gross_distro = 0\r\n            let tax_distro = 0\r\n            let comp_distro = 0\r\n            for (let i=0; i < props.distributions.length; i++){\r\n                if(datesList[x] === moment(props.distributions[i].CF_Date).format('MM/YY')){\r\n                    switch(props.distributions[i].Code_Name){\r\n                        case \"Special Distribution\":\r\n                            spec_distro = spec_distro + Math.round(props.distributions[i].CF_Amount)\r\n                        break\r\n                        case \"Gross Distribution\":\r\n                            gross_distro = gross_distro + Math.round(props.distributions[i].CF_Amount)\r\n                        break\r\n                        case \"Tax Distribution\":\r\n                            tax_distro = tax_distro + Math.round(props.distributions[i].CF_Amount)\r\n                        break\r\n                        case \"Composite Tax Distro\":\r\n                            comp_distro = comp_distro + Math.round(props.distributions[i].CF_Amount)\r\n                        break\r\n                        default:\r\n                    }\r\n                    \r\n                }\r\n            }\r\n                tempArray.push({\r\n                    Spec_Distro:spec_distro, \r\n                    Gross_Distro:gross_distro, \r\n                    Comp_Distro:comp_distro, \r\n                    Tax_Distro:tax_distro, \r\n                    CF_Date:datesList[x]\r\n                })\r\n        }\r\n        return tempArray\r\n    }\r\n\r\n  return (\r\n        <div className='autoMargin'>\r\n            <h3>Distribution History</h3>\r\n            <AreaChart width={1050} height={450} data={createNewCashflowObject()}\r\n            margin={{ top: 10, right: 50, left: 50, bottom: 0 }}>\r\n            <defs>\r\n                <linearGradient id=\"colorSD\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n                <stop offset=\"100%\" stopColor=\"#0088FE\" stopOpacity={0.8}/>\r\n                <stop offset=\"75%\" stopColor=\"#0088FE\" stopOpacity={0}/>\r\n                </linearGradient>\r\n                <linearGradient id=\"colorGD\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n                <stop offset=\"100%\" stopColor=\"#00C49F\" stopOpacity={0.8}/>\r\n                <stop offset=\"75%\" stopColor=\"#00C49F\" stopOpacity={0}/>\r\n                </linearGradient>\r\n                <linearGradient id=\"colorTD\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n                <stop offset=\"100%\" stopColor=\"#FF8042\" stopOpacity={0.8}/>\r\n                <stop offset=\"75%\" stopColor=\"#FF8042\" stopOpacity={0}/>\r\n                </linearGradient>\r\n                <linearGradient id=\"colorCD\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n                <stop offset=\"100%\" stopColor=\"#FFBB28\" stopOpacity={0.8}/>\r\n                <stop offset=\"75%\" stopColor=\"#FFBB28\" stopOpacity={0}/>\r\n                </linearGradient>\r\n            </defs>\r\n            <XAxis dataKey=\"CF_Date\" />\r\n            <YAxis dataKey=\"Spec_Distro\"/>\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <Tooltip />\r\n            <Area type=\"monotone\" dataKey=\"Spec_Distro\" stroke=\"#0088FE\" fillOpacity={1} fill=\"url(#colorSD)\" />\r\n            <Area type=\"monotone\" dataKey=\"Gross_Distro\" stroke=\"#0088FE\" fillOpacity={1} fill=\"url(#colorGD)\" />\r\n            <Area type=\"monotone\" dataKey=\"Comp_Distro\" stroke=\"#FFBB28\" fillOpacity={1} fill=\"url(#colorCD)\" />\r\n            <Area type=\"monotone\" dataKey=\"Tax_Distro\" stroke=\"#FF8042\" fillOpacity={1} fill=\"url(#colorTD)\" />\r\n            </AreaChart>\r\n        </div>\r\n  );\r\n}\r\nexport default DistroChart;","import { connect } from \"react-redux\";\r\nimport DistroChart from '../components/Cashflows/DistoChart'\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    distributions: state.distributions,\r\n  };\r\n}\r\n\r\nconst mapState= connect(mapStateToProps)\r\nexport const DistroChartContainer = mapState(DistroChart)","import React from \"react\";\r\nimport {BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend} from 'recharts'\r\nimport moment from 'moment'\r\n\r\nfunction FundsDistroChart(props) {\r\n    //This is to get the unique date values as well as format the dates\r\n    const distinct = (value, index, self)=>{\r\n        return self.indexOf(value) === index\r\n    }\r\n    let distroFundsArray = props.distributionsFund.map((row)=> row.Fund_ID)\r\n    let fundsList = distroFundsArray.filter(distinct)\r\n    function createNewCashflowObject(){\r\n        let tempArray = []\r\n        fundsList = fundsList.sort()\r\n        for (let x=0; x < fundsList.length; x++){\r\n            let spec_distro = 0\r\n            let gross_distro = 0\r\n            let tax_distro = 0\r\n            let comp_distro = 0\r\n            for (let i=0; i < props.distributionsFund.length; i++){\r\n                if(fundsList[x] === props.distributionsFund[i].Fund_ID){\r\n                    switch(props.distributionsFund[i].Code_Name){\r\n                        case \"Special Distribution\":\r\n                            spec_distro = spec_distro + Math.round(props.distributionsFund[i].CF_Amount)\r\n                        break\r\n                        case \"Gross Distribution\":\r\n                            gross_distro = gross_distro + Math.round(props.distributionsFund[i].CF_Amount)\r\n                        break\r\n                        case \"Tax Distribution\":\r\n                            tax_distro = tax_distro + Math.round(props.distributionsFund[i].CF_Amount)\r\n                        break\r\n                        case \"Composite Tax Distro\":\r\n                            comp_distro = comp_distro + Math.round(props.distributionsFund[i].CF_Amount)\r\n                        break\r\n                        default:\r\n                    }\r\n                    \r\n                }\r\n            }\r\n                tempArray.push({\r\n                    Spec_Distro:spec_distro, \r\n                    Gross_Distro:gross_distro, \r\n                    Comp_Distro:comp_distro, \r\n                    Tax_Distro:tax_distro, \r\n                    Fund_ID:fundsList[x]\r\n                })\r\n        }\r\n        return tempArray\r\n    }\r\n\r\n  return (\r\n    <div className='autoMargin'>\r\n        <h3>Distribution by Funds</h3>\r\n        <BarChart width={600} height={450} data={createNewCashflowObject()}\r\n            margin={{top: 20, right: 30, left: 20, bottom: 5}}>\r\n        <CartesianGrid strokeDasharray=\"3 3\"/>\r\n        <XAxis dataKey=\"Fund_ID\"/>\r\n        <YAxis/>\r\n        <Tooltip/>\r\n        <Legend />\r\n        <Bar dataKey=\"Spec_Distro\" stackId=\"a\" fill=\"#0088FE\" />\r\n        <Bar dataKey=\"Gross_Distro\" stackId=\"a\" fill=\"#00C49F\" />\r\n        <Bar dataKey=\"Comp_Distro\" stackId=\"a\" fill=\"#FF8042\" />\r\n        <Bar dataKey=\"Tax_Distro\" stackId=\"a\" fill=\"#FFBB28\" />\r\n        </BarChart>\r\n    </div>\r\n  );\r\n}\r\nexport default FundsDistroChart;","import { connect } from \"react-redux\";\r\nimport FundsDistroChart from '../components/Funds/FundDistroChart'\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    distributionsFund: state.distributionsFund,\r\n  };\r\n}\r\n\r\nconst mapState= connect(mapStateToProps)\r\nexport const DistroFundsChartContainer = mapState(FundsDistroChart)","import React from \"react\";\r\nimport { Layout } from 'antd'\r\nimport Cards from './Cards'\r\nimport FundsSizeContainer from '../../containers/FundsSizeContainer'\r\nimport {FundsCardResult} from '../../containers/FundsContainer'\r\nimport { DistroChartContainer } from '../../containers/DistributionContainer'\r\nimport { DistroFunnelContainer } from '../../containers/DistributionTotalsContainer'\r\nimport { DistroFundsChartContainer } from '../../containers/DistrbutionTotalsFundsContainer'\r\n\r\n//const { Content } = Layout;\r\n\r\nfunction Main(props) {\r\n  return (\r\n    <Layout>\r\n      <Cards/>\r\n      <h1 className='mainContainer'>Distribution Information</h1>\r\n      <div className='container'>\r\n        <DistroFunnelContainer/>\r\n        <DistroChartContainer/>\r\n      </div>\r\n      <h1 className='mainContainer'>Fund Information</h1>\r\n      <div className='container'>\r\n        <DistroFundsChartContainer/>\r\n        <FundsSizeContainer/>\r\n      </div>\r\n    </Layout>\r\n  );\r\n}\r\nexport default Main;","import React from 'react';\r\nimport { Layout, Menu, Icon } from 'antd';\r\nconst { Header} = Layout;\r\nconst { SubMenu } = Menu;\r\n\r\nexport default class NavTop extends React.Component {\r\n  state = {\r\n    current: 'mail',\r\n  };\r\n  handleClick = e => {\r\n    console.log('click ', e);\r\n    this.setState({\r\n      current: e.key,\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <Header style={{background: '#fff', padding: 0}}>\r\n        <Menu style={{maxHeight: 65, display: 'flex', lineHeight: '64px'}} onClick={this.handleClick} selectedKeys={[this.state.current]} mode=\"horizontal\">\r\n          <Menu.Item key=\"logo\" style={{fontWeight: 'bolder', fontSize: 26}}>\r\n            <Icon type=\"code\" style={{fontSize: 22}} />\r\n            Dashboard\r\n          </Menu.Item>\r\n          <Menu.Item key=\"app\" >\r\n            <Icon type=\"appstore\" />\r\n            Navigation One\r\n          </Menu.Item>\r\n          <SubMenu\r\n            style={{marginLeft:'72%' , right: 0}}\r\n            title={\r\n              <span className=\"submenu-title-wrapper\">\r\n                <Icon type=\"user\" />\r\n                User\r\n              </span>\r\n            }\r\n          >\r\n            <Menu.ItemGroup title=\"General\">\r\n              <Menu.Item key=\"setting:1\">System Settings</Menu.Item>\r\n              <Menu.Item key=\"setting:2\">Theme</Menu.Item>\r\n            </Menu.ItemGroup>\r\n            <Menu.ItemGroup title=\"User\">\r\n              <Menu.Item key=\"setting:3\">Settings</Menu.Item>\r\n              <Menu.Item key=\"setting:4\">Log Out</Menu.Item>\r\n            </Menu.ItemGroup>\r\n          </SubMenu>\r\n        </Menu>\r\n      </Header>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport { Layout, Menu, Icon } from 'antd'\r\n\r\nconst { Sider } = Layout;\r\nconst { SubMenu } = Menu;\r\n\r\n\r\nexport default class NavSide extends React.Component {\r\n  state = {\r\n    collapsed: false,\r\n    navWidth:  200\r\n  };\r\n\r\n  onCollapse = collapsed => {\r\n    this.setState({ collapsed });\r\n    if (this.state.navWidth === 200){\r\n      this.setState({navWidth: 80})\r\n    }else{\r\n      this.setState({navWidth: 200})\r\n    }\r\n    \r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Layout  style={{maxWidth: this.state.navWidth, minHeight: \"100vh\"}}>\r\n        <Sider collapsible collapsed={this.state.collapsed} onCollapse={this.onCollapse}>\r\n          <div className=\"logo\" />\r\n          <Menu theme=\"dark\" defaultSelectedKeys={['1']} mode=\"inline\">\r\n            <Menu.Item className='navlink' key=\"1\">\r\n              <Icon type=\"pie-chart\" />\r\n              <span>\r\n                <Link className='navlink' to='/'> Home </Link>\r\n              </span>\r\n            </Menu.Item>\r\n            <SubMenu\r\n              key=\"sub1\"\r\n              title={\r\n                <span>\r\n                <Icon type=\"user\" />\r\n                <span>\r\n                    <Link className='navlink' to='/investors'> Investors </Link>\r\n                </span>\r\n                </span>\r\n              }\r\n            >\r\n              <Menu.Item key=\"3\">Distributions</Menu.Item>\r\n              <Menu.Item key=\"4\">Transfer</Menu.Item>\r\n              <Menu.Item key=\"5\">Upload</Menu.Item>\r\n            </SubMenu>\r\n            <SubMenu\r\n              key=\"sub2\"\r\n              title={\r\n                <span>\r\n                  <Icon type=\"team\" />\r\n                  <span>Properties</span>\r\n                </span>\r\n              }\r\n            >\r\n              <Menu.Item key=\"6\">Pipeline</Menu.Item>\r\n              <Menu.Item key=\"8\">Performance</Menu.Item>\r\n            </SubMenu>\r\n            <Menu.Item key=\"2\">\r\n              <Icon type=\"desktop\" />\r\n              <span>\r\n              <Link className='navlink' to='/cashflows'> Cashflows </Link>\r\n              </span>\r\n            </Menu.Item>\r\n          </Menu>\r\n        </Sider>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\n","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Table, Input, Button, Icon }  from 'antd';\r\n\r\nclass InvestorsTable extends Component{\r\n    state = {\r\n        searchText: '',\r\n      };\r\n      getColumnSearchProps = dataIndex => ({\r\n        filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\r\n          <div style={{ padding: 8 }}>\r\n            <Input\r\n              ref={node => {\r\n                this.searchInput = node;\r\n              }}\r\n              placeholder={`Search ${dataIndex}`}\r\n              value={selectedKeys[0]}\r\n              onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\r\n              onPressEnter={() => this.handleSearch(selectedKeys, confirm)}\r\n              style={{ width: 188, marginBottom: 8, display: 'block' }}\r\n            />\r\n            <Button\r\n              type=\"primary\"\r\n              onClick={() => this.handleSearch(selectedKeys, confirm)}\r\n              icon=\"search\"\r\n              size=\"small\"\r\n              style={{ width: 90, marginRight: 8 }}\r\n            >\r\n              Search\r\n            </Button>\r\n            <Button onClick={() => this.handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\r\n              Reset\r\n            </Button>\r\n          </div>\r\n        ),\r\n        filterIcon: filtered => (\r\n          <Icon type=\"search\" style={{ color: filtered ? '#1890ff' : undefined }} />\r\n        ),\r\n        onFilter: (value, record) =>\r\n          record[dataIndex]\r\n            .toString()\r\n            .toLowerCase()\r\n            .includes(value.toLowerCase()),\r\n        onFilterDropdownVisibleChange: visible => {\r\n          if (visible) {\r\n            setTimeout(() => this.searchInput.select());\r\n          }\r\n        },\r\n      })\r\n\r\n    handleSearch = (selectedKeys, confirm) => {\r\n        confirm();\r\n        this.setState({ searchText: selectedKeys[0] });\r\n      }\r\n    \r\n    handleReset = clearFilters => {\r\n        clearFilters();\r\n        this.setState({ searchText: '' });\r\n      }\r\n\r\n    render(){\r\n        let columns = [\r\n        {title: 'InvID', dataIndex:'InvID',  key: 'InvID', ...this.getColumnSearchProps('InvID'), render: text => <Link  to={\"/investors/invid/\"+text}>{text}</Link>},\r\n        {title: 'CID', dataIndex:'CID',  key: 'CID', ...this.getColumnSearchProps('CID'), render: text => <Link  to={\"/investors/cid/\"+text}>{text}</Link>},\r\n        {title: 'VID', dataIndex:'VID',  key: 'VID', ...this.getColumnSearchProps('VID')},\r\n        {title: 'SID', dataIndex:'SID', key: 'SID', ...this.getColumnSearchProps('SID')},\r\n        {title: 'Name', dataIndex:'Account_Name', key: 'Account_Name', ...this.getColumnSearchProps('Account_Name')},\r\n        {title: 'Feeder', dataIndex:'Feeder', key: 'Feeder', ...this.getColumnSearchProps('Feeder')},\r\n        {title: 'Inv_Type', dataIndex:'Inv_Type', key: 'Inv_Type', ...this.getColumnSearchProps('Inv_Type')},\r\n        {title: 'Date_Inv', dataIndex:'Date_Inv', key: 'Date_Inv', ...this.getColumnSearchProps('Date_Inv')},\r\n        {title: 'Date_Eliminate', dataIndex:'Date_Eliminate', key: 'String', ...this.getColumnSearchProps('Date_Eliminate')},\r\n        {title: 'Gross_Capital', dataIndex:'Gross_Capital', key: 'Gross_Capital', ...this.getColumnSearchProps('Gross_Capital')},\r\n        {title: 'Net_Capital', dataIndex:'Net_Capital', key: 'Net_Capital', ...this.getColumnSearchProps('Net_Capital')}\r\n\r\n        ]\r\n        return(\r\n            <div style={{marginTop: 50}}>\r\n                <Table columns= {columns} dataSource={this.props.investors} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default InvestorsTable","import { connect } from \"react-redux\";\r\nimport InvestorsTable from \"../components/Investors/InvestorsTable\";\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    investors: state.investors\r\n  };\r\n}\r\n\r\nexport const InvestorsTableResults = connect(mapStateToProps)(InvestorsTable);","import React, { useState, useEffect, Component } from \"react\";\r\nimport { Form, Input, Button } from 'antd'\r\nimport { func } from \"prop-types\";\r\n\r\nfunction Login(props){\r\n    const [login , loginSet] = useState(props.loginState)\r\n    const [userName, userNameSet] = useState()\r\n    const [password, passwordSet] = useState()\r\n\r\n    //This is to make login faster for development would be removed along with default values\r\n    useEffect(()=>{\r\n        userNameSet(\"admin\")\r\n        passwordSet(\"root\")\r\n        loginSet()\r\n        // updateCredentials()\r\n        // loginbtn()\r\n    },[]) \r\n\r\n    // function updateCredentials(){\r\n    //     props.log([userName, password])\r\n    //     loginSet(props.loginState)\r\n    // }\r\n\r\n    function loginbtn(){\r\n        props.log([userName, password])\r\n        console.log(userName)\r\n        console.log(password)\r\n        console.log(props.loginState)\r\n        if (props.loginState[\"ids\"] != undefined){\r\n            props.handle()\r\n        }\r\n    } \r\n    return(\r\n        <div style={{position: \"absolute\", left: \"35%\", top:\"25%\", background: '#ECECEC', padding: '25px', width:400 }}>\r\n            <h1>DashBoard Login In</h1>\r\n            <Form>\r\n                <Input onChange={(e)=> userNameSet(e.target.value)} defaultValue=\"admin\" style={{margin: 5}} placeholder=\"Username\"/>\r\n                <Input onChange={(e)=> passwordSet(e.target.value)} defaultValue=\"root\" style={{margin: 5}} placeholder=\"Password\"/>\r\n                <Button onClick={(e)=> loginbtn()} style={{margin: 5}} type=\"primary\" htmlType=\"submit\">\r\n                Log in\r\n                </Button>\r\n            </Form>\r\n        </div>\r\n    );    \r\n}\r\n\r\nexport default Login\r\n","import { connect } from \"react-redux\";\r\nimport  Login  from \"../components/Main/Login\";\r\n// import  Cards  from \"../components/Main/Cards\";\r\n\r\nfunction mapStateToProps(state) {\r\n  return { \r\n    loginState: state.loginState,\r\n  };\r\n}\r\n\r\nconst mapState= connect(mapStateToProps)\r\nexport const LoginContainer = mapState(Login)\r\n// export const LoginAppContainer = mapState(Cards)","import React, {useState, useEffect} from \"react\";\r\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip } from 'recharts'\r\nimport { Card, Input, Modal, Table, Button } from 'antd'\r\nimport { useSelector } from 'react-redux'\r\n//import TableSelect from '../Reusable/TableSelect'\r\nimport moment from 'moment'\r\nimport numeral from 'numeral'\r\n// import { updateInvestorCashFlow }  from '../../actions/actions'\r\n\r\n\r\nfunction InvestorDetail (props) {\r\n//Props State\r\n    const propsHolder = useSelector( props => props)\r\n    const propsDetails = useSelector(props => props.investorsInvID.map(res =>res.details))\r\n    const propsCash = useSelector(props =>props.investorsInvID.map(res => res.cashflows))\r\n//Other State\r\n    const [tableData, tableDataSet] = useState([])\r\n    const [barChartData,barChartDataSet] = useState([])\r\n    const [barChartColumns,barChartColumnsSet] = useState([])\r\n    const [cardDataCash, cardDataCashSet] = useState([])\r\n    const [cardDataDetail, cardDataDetailSet] = useState([])\r\n\r\n    const [newModalValue, newModalValueSet] = useState({})\r\n    const [oldModalValues, oldModalValuesSet] = useState({})\r\n\r\n    function getCardDataDetail(){\r\n        let tempObject = {}\r\n        for(let element in propsDetails[0]){\r\n            tempObject = propsDetails[element][0]\r\n        }\r\n        cardDataDetailSet(tempObject)\r\n    }\r\n\r\n    function getCardDataCash(){\r\n        let tempArray = []\r\n        let cash = getCashFlowTotals()\r\n        for(let element in cash){\r\n            cash[element] = numeral(cash[element]).format('0,0')\r\n            tempArray.push(<p key={element}>{element}:  {cash[element]}</p>)\r\n        }\r\n        cardDataCashSet(tempArray)\r\n    }\r\n\r\n    function getCashFlowTotals(){\r\n        const tempObject ={\r\n            'Gross Distribution': 0, 'Special Distribution':0,'Composite Tax Distro':0, 'Tax Distribution':0,\r\n            'Tax Holdback':0, 'GP Promote':0, 'Management Fee':0, 'Servicing Fee':0, 'Commission':0, \r\n        }\r\n        propsCash.forEach(array => {\r\n                array.forEach((row, index)=>{\r\n                    try{\r\n                        tempObject[row.Code_Name] += row.CF_Amount\r\n                    }catch(err){}\r\n                })\r\n        })\r\n        return tempObject\r\n    }\r\n\r\n    let columns = [\r\n        {title: 'Edit', dataIndex:'Edit',  key: 'Edit', width: '10%'},\r\n        {title: 'InvID', dataIndex:'InvID',  key: 'InvID', width: '15%'},\r\n        {title: 'CID', dataIndex:'CID', key: 'CID', width: '15%'},\r\n        {title: 'Type', dataIndex:'Code_Name',  key: 'Code_Name', width: '20%'},\r\n        {title: 'Amount', dataIndex:'CF_Amount', key: 'CF_Amount', width: '20%'},\r\n        {title: 'Date', dataIndex:'CF_Date',  key: 'CF_Date', width: '20%'},\r\n    ]   \r\n    function getTableData(){\r\n        let tempArray = []\r\n        const cashArray = JSON.parse(JSON.stringify(propsCash))\r\n        cashArray.forEach(array => {\r\n            array.forEach((row, index)=>{\r\n                row.CF_Date = moment(row.CF_Date).format('MM/DD/YYYY')\r\n                row.CF_Amount = numeral(row.CF_Amount).format('0,0')\r\n                row.Edit= (<Button type=\"primary\" key={index} onClick={()=>showModal(row)}>Edit</Button>)\r\n                tempArray.push(row)\r\n            })\r\n        })\r\n        tableDataSet(tempArray)\r\n    }\r\n\r\n    function getBarChartData(){\r\n         //Create cashflow total card. Create array to hold barchart data. Create array to hold <Bar> tags.  \r\n        const COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042',  '#FF8042', '#FF8042', '#FF8042', '#FF8042', '#FF8042'];\r\n        let tempArrayData = []\r\n        let tempArrayColumns =[]\r\n        let count = 0\r\n        let cash = getCashFlowTotals()\r\n        for(let element in cash){\r\n            if(cash[element] > 0 ){\r\n                tempArrayData.push({distrotype: element, amount: cash[element]})\r\n                tempArrayData[count][element] = cash[element]\r\n                tempArrayColumns.push(<Bar key={element} dataKey={element} fill={COLORS[count]}/>)\r\n                    count += 1\r\n            }\r\n        }\r\n        barChartColumnsSet(tempArrayColumns)\r\n        barChartDataSet(tempArrayData)\r\n    }\r\n \r\n    useEffect(()=>{\r\n        getCashFlowTotals()\r\n        getTableData()\r\n        getBarChartData()\r\n        getCardDataCash()\r\n        getCardDataDetail()\r\n    },[propsHolder]) \r\n\r\n    //Modal\r\n        const [visible, setVisible]= useState(false)\r\n        const [confirmLoading, setConfirmLoading]= useState(false)\r\n        \r\n        function showModal(row){\r\n            let rowClone = {...row}\r\n            rowClone.CF_Amount = parseFloat(rowClone.CF_Amount)\r\n            oldModalValuesSet(rowClone)\r\n            newModalValueSet(rowClone)\r\n            setVisible(true)\r\n        };\r\n\r\n        function handleOk () {\r\n            setConfirmLoading(false)\r\n            setTimeout(() => {\r\n                // updateInvestorCashFlow(oldModalValues, newModalValue)\r\n                setVisible(false)\r\n                setConfirmLoading(false)\r\n            }, 500);\r\n        };\r\n\r\n        function handleCancel () {\r\n            setVisible(false)\r\n          };\r\n\r\n        function updateModalValues(value){\r\n            console.log(value)\r\n            let key = Object.keys(value)\r\n            let clone = JSON.parse(JSON.stringify(newModalValue))\r\n            clone[key]  = value[0]\r\n            // for (let e in newModalValue){\r\n            //     // cleanInfo[Ob]\r\n            //     if(Object.keys(value)=== e){\r\n                    \r\n            //     }\r\n            }\r\n\r\n        return(\r\n           \r\n            <div style={{background: '#ECECEC'}}>\r\n                <div style={{display: 'flex',padding: '30px' }}>\r\n                    <Card title={cardDataDetail.Account_Name} bordered={false} style={{ width: 300, margin:25 }}>\r\n                        <p>InvId:           {cardDataDetail.InvID}</p>\r\n                        <p>CID:             {cardDataDetail.CID}</p>\r\n                        <p>Feeder:          {cardDataDetail.Feeder}</p>\r\n                        <p>Inv Type:        {cardDataDetail.Inv_Type}</p>\r\n                        <p>Gross Capital:   {numeral(cardDataDetail.Gross_Capital).format('0,0')}</p>\r\n                        <p>Net Capital:     {numeral(cardDataDetail.Net_Capital).format('0,0')}</p>\r\n                        <p>Start Date:      {moment(cardDataDetail.Date_Inv).format('MM/DD/YYYY')}</p>\r\n                        <p>End Date:        {moment(cardDataDetail.Date_Eliminate).format('MM/DD/YYYY')}</p>\r\n                    </Card>\r\n                    <br/>\r\n                    <Card title='Cashflows' bordered={false} style={{ width: 300, margin:25 }}>\r\n                        {cardDataCash}\r\n                    </Card>\r\n                    <BarChart\r\n                        width={900}\r\n                        height={500}\r\n                        data={barChartData}\r\n                        margin={{\r\n                        top: 25, right: 30, left: 20, bottom: 5,\r\n                        }}\r\n                    >\r\n                        <CartesianGrid strokeDasharray=\"3 3\" />\r\n                        <XAxis dataKey=\"distrotype\" />\r\n                        <YAxis dataKey=\"amount\"/>\r\n                        <Tooltip />\r\n                        {barChartColumns}\r\n                    </BarChart>\r\n                </div>\r\n                <Modal\r\n                    title=\"Edit Cash Flows\"\r\n                    visible={visible}\r\n                    onOk={handleOk}\r\n                    confirmLoading={confirmLoading}\r\n                    onCancel={handleCancel}>\r\n                        <div style={{display: 'inline-flex'}}>\r\n                        <Input onChange={(e)=>  updateModalValues({InvID: e.target.value})} id=\"InvID\" addonBefore='InvID' defaultValue={oldModalValues.InvID}/>\r\n                        <Input style={{margin: 5}} addonBefore='CID' defaultValue={oldModalValues.CID}/>\r\n                        </div>\r\n                        <Input style={{margin: 5}} addonBefore='Type' defaultValue={oldModalValues.Code_Name}/>\r\n                        <Input style={{margin: 5}} addonBefore='Date' defaultValue={oldModalValues.CF_Date}/>\r\n                        <Input  style={{margin: 5}} addonBefore='Amount' defaultValue={oldModalValues.CF_Amount}/>\r\n                </Modal>\r\n                    <Table style={{marginRight: 75, background: '#f1f3f5'}} columns= {columns} dataSource={tableData} />\r\n            </div>\r\n        )\r\n}\r\n\r\nexport default InvestorDetail\r\n","import { connect } from \"react-redux\";\r\nimport InvestorDetail from \"../components/Investors/InvestorDetail\";\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    investorsInvID: state.investorsInvID,\r\n    updateInvestorCashFlow: state.updateInvestorCashFlow\r\n  };\r\n}\r\n\r\nexport const InvestorDetailResult = connect(mapStateToProps)(InvestorDetail)","import React, { Component } from \"react\";\r\nimport { withRouter, Switch, Route, } from \"react-router-dom\";\r\nimport \"antd/dist/antd.css\";\r\nimport { Layout } from \"antd\";\r\nimport Main from \"./components/Main/Main\";\r\nimport NavTop from \"./components/Layout/NavTop\";\r\nimport NavSide from \"./components/Layout/NavSide\";\r\nimport { InvestorsTableResults } from \"./containers/InvestorsContainer\"\r\nimport { LoginContainer } from \"./containers/LoginContainer\"\r\nimport { FundsCardResult } from \"./containers/FundsContainer\";\r\nimport { InvestorDetailResult } from './containers/InvestorsInvIDContainer'\r\nconst { Content} = Layout;\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loginChange: this.loggedout()\r\n    }\r\n  }\r\n\r\n  getComponenets(){\r\n    this.props.loadFunds();\r\n    this.props.loadFundsSize();\r\n    this.props.loadInvestors();\r\n    this.props.loadInvestments();\r\n    this.props.loadDistributions();\r\n    this.props.loadInvestorsInvID();\r\n    this.props.loadcfTotals();\r\n    this.props.loadDistributionsByFund();\r\n    // this.props.updateInvestorCashFlow();\r\n  }\r\n\r\n  handleLogin = ()=>{\r\n    this.getComponenets()\r\n    this.setState({\r\n      loginChange:this.loggedin()\r\n    })\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.unlisten = this.props.history.listen((location, action) => {\r\n      this.props.loadInvestorsInvID();\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.unlisten();\r\n  }\r\n\r\n  loggedout =()=>{\r\n    return(\r\n      <LoginContainer log={this.props.loadLogin} handle={this.handleLogin.bind(this)} loginChange={this.loginChange}/>\r\n      )\r\n  }\r\n\r\n  loggedin=()=>{\r\n    console.log(true)\r\n    return(\r\n    <Layout style={{ minHeight: \"100vh\" }}>\r\n      <NavTop />\r\n      <div id='container' style={{display: 'flex'}}>\r\n      <NavSide />\r\n      <Switch>\r\n        <Content style={{marginLeft: 10}}>\r\n          <Route path=\"/\" exact component={Main} />\r\n          <Route path=\"/funds\" component={FundsCardResult} />\r\n          <Route path=\"/investors\" exact component={InvestorsTableResults} />\r\n          <Route path=\"/investors/invid/:id\" component={InvestorDetailResult} />\r\n          <Route path=\"/cashflows\" component={Main} />\r\n        </Content>\r\n      </Switch>\r\n    </div>\r\n    </Layout>\r\n    )\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.state.loginChange}\r\n      </div>    \r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(App);\r\n","\r\nexport function loadLogin(u) {\r\n  return function (dispatch) {\r\n    fetch(\"/api/login/\"+u[0]+\"/\"+u[1])\r\n      .then( (response) => {\r\n        return response.json();\r\n      }).then((res) => {\r\n        dispatch(loginLoaded(res));\r\n      });\r\n    };  \r\n  };\r\n\r\nfunction loginLoaded(res) {\r\n  return {\r\n    type: \"LOGIN_LOADED\",\r\n    value: res\r\n  };\r\n}\r\n\r\nexport function loadFunds() {\r\n    return function (dispatch) {\r\n      fetch(\"/api/funds\")\r\n      .then( (response) => {\r\n        return response.json();\r\n      }).then((res) => {\r\n        dispatch(fundsLoaded(res));\r\n      });\r\n    };\r\n  }\r\n  function fundsLoaded(res) {\r\n    return {\r\n      type: \"FUNDS_LOADED\",\r\n      value: res\r\n    };\r\n  }\r\n\r\nexport function loadFundsSize() {\r\n  return function (dispatch) {\r\n    fetch(\"/api/fundstotals\")\r\n    .then( (response) => {\r\n      return response.json();\r\n    }).then((res) => {\r\n      dispatch(fundsSizeLoaded(res));\r\n    });\r\n  };\r\n}\r\nfunction fundsSizeLoaded(res) {\r\n  return {\r\n    type: \"FUNDS_SIZE_LOADED\",\r\n    value: res\r\n  };\r\n}\r\n\r\nexport function loadInvestments() {\r\n  return function (dispatch) {\r\n    fetch(\"/api/investments\")\r\n    .then( (response) => {\r\n      return response.json();\r\n    }).then((res) => {\r\n      dispatch(investmentsLoaded(res));\r\n    }).catch((error)=>console.log(error.message))\r\n  };\r\n}\r\nfunction investmentsLoaded(res) {\r\n  return {\r\n    type: \"INVESTMENTS_LOADED\",\r\n    value: res\r\n  };\r\n}\r\n\r\nexport function loadDistributions() {\r\n  return function (dispatch) {\r\n    fetch(\"/api/cf/totals/monthly\")\r\n    .then( (response) => {\r\n      return response.json();\r\n    }).then((res) => {\r\n      dispatch(distributionsLoaded(res));\r\n    });\r\n  };\r\n}\r\nfunction distributionsLoaded(res) {\r\n  return {\r\n    type: \"DISTRIBUTIONS_LOADED\",\r\n    value: res\r\n  };\r\n}\r\n\r\nexport function loadDistributionsByFund() {\r\n  return function (dispatch) {\r\n    fetch(\"/api/cf/totals/funds\")\r\n    .then( (response) => {\r\n      return response.json();\r\n    }).then((res) => {\r\n      dispatch(distributionsByFundLoaded(res));\r\n    });\r\n  };\r\n}\r\nfunction distributionsByFundLoaded(res) {\r\n  return {\r\n    type: \"DISTRIBUTIONS_LOADED_FUNDS\",\r\n    value: res\r\n  };\r\n}\r\n\r\nexport function loadcfTotals() {\r\n  return function (dispatch) {\r\n    fetch(\"/api/cf/totals\")\r\n    .then( (response) => {\r\n      return response.json();\r\n    }).then((res) => {\r\n      dispatch(cfTotalsLoaded(res));\r\n    });\r\n  };\r\n}\r\n\r\nfunction cfTotalsLoaded(res) {\r\n  return {\r\n    type: \"CFTOTALS_LOADED\",\r\n    value: res\r\n  };\r\n}\r\n\r\nexport function loadInvestors() {\r\n  return function (dispatch) {\r\n    fetch(\"/api/investments\")\r\n    .then( (response) => {\r\n      return response.json();\r\n    }).then((res) => {\r\n      dispatch(investorsLoaded(res));\r\n    });\r\n  };\r\n}\r\nfunction investorsLoaded(res) {\r\n  return {\r\n    type: \"INVESTORS_LOADED\",\r\n    value: res\r\n  };\r\n}\r\n \r\nexport function loadInvestorsInvID() {\r\n  let url = window.location.href\r\n  if (url.split(\"/\").slice(-2)[0] === \"invid\"){\r\n    var urlsplit = url.split(\"/\").slice(-1)[0];\r\n    return function (dispatch) {\r\n      fetch(\"/api/investments/invid/\"+urlsplit)\r\n      .then( (response) => {\r\n        return response.json();\r\n      }).then((res) => {\r\n        dispatch(investorsLoadedInvID(res));\r\n      });\r\n    };\r\n  }\r\n  return investorsLoadedInvID([]);\r\n}\r\n\r\nfunction investorsLoadedInvID(res) {\r\n  return {\r\n    type: \"INVESTORS_INVID_LOADED\",\r\n    value: res\r\n  };\r\n}\r\n\r\nexport function updateInvestorCashFlow(oldValue, newValue, row) {\r\n  console.log(oldValue)\r\n  console.log(newValue)\r\n  let url = window.location.href\r\n  var urlsplit = url.split(\"/\").slice(-1)[0];\r\n  // return function (dispatch) {\r\n    fetch(\"/api/investments/invid/\"+urlsplit+\"/cf\", {\r\n      method: \"PUT\",\r\n      headers: {\"Content-Type\": \"application/json\"},\r\n      body: JSON.stringify({row})\r\n    })\r\n    .then((res) => res.json()\r\n    .then(response => loadInvestorsInvID(response))\r\n    .catch(error => console.error('Error:', error)))\r\n}\r\n//      .then((res) => res.json())\r\n//     .then(response => console.log('Success:', JSON.stringify(response)))\r\n//     .catch(error => console.error('Error:', error));\r\n// {username: \"Broly\", password: \"Peterson\"}","import App from './App'\r\nimport './App.css'\r\nimport { connect } from 'react-redux'\r\nimport {loadLogin, loadDistributionsByFund, loadFunds, loadFundsSize, loadInvestments, loadDistributions,loadInvestors, loadInvestorsInvID, updateInvestorCashFlow,loadcfTotals} from \"./actions/actions\";\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    loadFunds: function () {\r\n      dispatch(loadFunds())\r\n    },\r\n    loadFundsSize: function () {\r\n      dispatch(loadFundsSize())\r\n    },\r\n    loadInvestments: function () {\r\n      dispatch(loadInvestments())\r\n    },\r\n    loadDistributions: function () {\r\n      dispatch(loadDistributions())\r\n    },\r\n    loadInvestors: function () {\r\n      dispatch(loadInvestors())\r\n    },\r\n    loadInvestorsInvID: function () {\r\n      dispatch(loadInvestorsInvID())\r\n    },\r\n    updateInvestorCashFlow:function(result){\r\n      dispatch(updateInvestorCashFlow(result))\r\n    },\r\n    loadcfTotals:function(result){\r\n      dispatch(loadcfTotals(result))\r\n    },\r\n    loadDistributionsByFund:function(result){\r\n      dispatch(loadDistributionsByFund(result))\r\n    },\r\n    loadLogin:function(result){\r\n      dispatch(loadLogin(result))\r\n    }\r\n  }\r\n}\r\n\r\nexport default connect(null,mapDispatchToProps)(App)","import {combineReducers} from \"redux\";\r\n\r\nfunction loginState(state = {}, action) {\r\n  if (action.type === \"LOGIN_LOADED\") {\r\n    return action.value\r\n  }\r\n  return state;\r\n}\r\n\r\nfunction funds(state = [], action) {\r\n  if (action.type === \"FUNDS_LOADED\") {\r\n    return action.value;\r\n  }\r\n  return state;\r\n}\r\n\r\nfunction fundsSize(state = [], action) {\r\n  if (action.type === \"FUNDS_SIZE_LOADED\") {\r\n    return action.value;\r\n  }\r\n  return state;\r\n}\r\n\r\nfunction investments(state =[], action){\r\n  if (action.type === 'INVESTMENTS_LOADED'){\r\n    return action.value\r\n  }\r\n  return state\r\n}\r\n\r\nfunction distributions(state =[], action){\r\n  if (action.type === 'DISTRIBUTIONS_LOADED'){\r\n    return action.value\r\n  }\r\n  return state\r\n}\r\n\r\nfunction cfTotals(state =[], action){\r\n  if (action.type === 'CFTOTALS_LOADED'){\r\n    return action.value\r\n  }\r\n  return state\r\n}\r\n\r\nfunction investors(state =[], action){\r\n  if (action.type === 'INVESTORS_LOADED'){\r\n    return action.value\r\n  }\r\n  return state\r\n}\r\n\r\nfunction investorsInvID(state =[], action){\r\n  if (action.type === 'INVESTORS_INVID_LOADED'){\r\n    return action.value\r\n  }\r\n  return state\r\n}\r\n\r\nfunction distributionsFund(state =[], action){\r\n  if (action.type === 'DISTRIBUTIONS_LOADED_FUNDS'){\r\n    return action.value\r\n  }\r\n  return state\r\n}\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n  loginState, funds, fundsSize, investments, distributions, investors, investorsInvID, cfTotals, distributionsFund\r\n  });\r\n  export default rootReducer;","import state from \"./state\";\r\nimport reducers from \"./reducers/reducers\";\r\nimport {createStore, applyMiddleware, compose} from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst composeEnhancers =\r\n typeof window === \"object\" &&\r\n window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\r\n   window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({}) : compose;\r\n   \r\nconst enhancer = composeEnhancers(\r\n applyMiddleware(thunk)\r\n);\r\nconst store = createStore(reducers,state,enhancer);\r\nexport default store;","export default {\r\n    funds: [],\r\n    fundsSize: [],\r\n    investments: [],\r\n    distributions: [],\r\n    investors: [],\r\n    investorsInvID: [],\r\n    updateInvestorCashFlow: []\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n// import './reset.css'\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport AppContainer from './AppContainer'\r\nimport store from './store'\r\nimport { Provider } from 'react-redux'\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\n\r\nReactDOM.render(\r\n<Provider store={store}>\r\n    <BrowserRouter>\r\n        <AppContainer/>\r\n    </BrowserRouter>\r\n</Provider>\r\n, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}