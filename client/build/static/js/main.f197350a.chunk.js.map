{"version":3,"sources":["support/serviceWorker.js","components/Main/InvestmentsCard.js","containers/Main/InvestmentsContainer.js","components/Main/DistributionsCardComponent.js","components/Reusable/FunnelChart.js","components/Main/DistroFunnelChart.js","containers/Main/DistributionTotalsContainer.js","components/Main/Cards.js","components/Reusable/PieChart.js","components/Main/FundsPieChart.js","containers/Main/FundsSizeContainer.js","components/Main/FundsComponent.js","components/Funds/Funds.js","components/Funds/FundsList.js","containers/Funds/FundsContainer.js","components/Main/DistoChart.js","containers/Main/DistributionContainer.js","components/Main/FundDistroChart.js","containers/Main/DistrbutionTotalsFundsContainer.js","components/Main/Main.js","components/Layout/Search.js","containers/Layout/SearchCont.js","components/Layout/NavTop.js","components/Layout/NavSide.js","components/Investors/InvestorsTable.js","containers/Investors/InvestorsContainer.js","components/Main/Login.js","containers/Main/LoginContainer.js","components/Investors/InvestorDetailInvid.js","actions/put.js","containers/Investors/InvestorsInvIDContainer.js","actions/get.js","App.js","support/AppContainer.js","reducers/reducers.js","support/store.js","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","InvestmentsCard","props","investmentInfo","fundsSize","reduce","a","b","InvID_Count","investmentGrossCapital","Sum_of_Gross_Capital","investmentNetCapital","Sum_of_Net_Capital","react_default","createElement","Fragment","col","span","card","statistic","title","value","precision","valueStyle","color","fontWeight","prefix","icon","type","suffix","connect","investments","DistributionsCard","distroTotal","mgmtTotal","servTotal","cfTotals","length","FunnelChartDash","COLORS","className","es6","width","height","data","dataKey","nameKey","map","entry","index","key","concat","fill","position","font-weight","shortName","DistroFunnelChart","spec_distro","gross_distro","tax_distro","comp_distro","name","FunnelChart","mapState","DistroCardsContainer","DistroFunnelContainer","Cards","style","background","padding","es_row","gutter","InvestmentsContainer","PieChartDash","label","legendType","FundsPieChart","PieChart","Funds","funds","row","Fund_ID","Feeder","_useState","useState","_useState2","Object","slicedToArray","selectedFund","selectedFundSet","fundsList","filter","self","indexOf","handleMenuClick","e","item","children","sort","unshift","useEffect","dropdown","overlay","fundsListArray","menu","Item","onClick","es_button","FundsCard","list","header","bordered","dataSource","minWidth","marginLeft","renderItem","FundsContainer","FundsMain","DistroChart","datesList","distributions","moment","CF_Date","format","tempArray","x","i","Code_Name","Math","round","CF_Amount","push","Spec_Distro","Gross_Distro","Comp_Distro","Tax_Distro","createNewCashflowObject","margin","top","right","left","bottom","id","x1","y1","x2","y2","offset","stopColor","stopOpacity","strokeDasharray","stroke","fillOpacity","DistroChartContainer","FundsDistroChart","distributionsFund","stackId","DistroFundsChartContainer","Main","layout","Main_Cards","FundsSizeContainer","Option","Select","Search","dataSet","_useState3","_useState4","valueSet","_useState5","_useState6","fetching","fetchingSet","immediateValue","mapper","Account_Name","InvID","CID","SID","VID","fetchProps","object","localeCompare","array","toString","toUpperCase","includes","undefined","handleURL","clone","substr","detail","split","pop","trim","replace","pathname","search","fetchAll","debounce","body","res","items","names","sid","invid","cid","vid","_i","_Object$entries","entries","_ref3","_ref2","getSearchableItems","result","handleSearchArray","text","marginRight","alignSelf","es_select","showSearch","fontSize","mode","allowClear","placeholder","notFoundContent","spin","size","filterOption","onSearch","onChange","action","showArrow","onInputKeyDown","keyCode","d","shape","enterButton","SearchResult","Header","Layout","SubMenu","Menu","NavTop","current","handleClick","_this","setState","maxHeight","display","lineHeight","this","selectedKeys","ItemGroup","React","Component","Sider","NavSide","collapsed","navWidth","onCollapse","maxWidth","minHeight","collapsible","theme","defaultSelectedKeys","react_router_dom","to","NavSide_SubMenu","InvestorsTable","searchText","getColumnSearchProps","dataIndex","filterDropdown","_ref","setSelectedKeys","confirm","clearFilters","input","ref","node","searchInput","target","onPressEnter","handleSearch","marginBottom","handleReset","filterIcon","filtered","onFilter","record","toLowerCase","onFilterDropdownVisibleChange","visible","setTimeout","select","columns","objectSpread","render","table","pagination","pageSize","investors","InvestorsTableResults","Login","userName","userNameSet","password","passwordSet","invalid","invalidSet","loginState","handleLogin","es_form","onSubmit","preventDefault","loginbtn","defaultValue","htmlType","LoginContainer","InvestorDetail","propsHolder","useSelector","propsDetails","investorsInvID","details","propsCash","cashflows","tableData","tableDataSet","barChartData","barChartDataSet","barChartColumns","barChartColumnsSet","_useState7","_useState8","cardDataCash","cardDataCashSet","_useState9","_useState10","cardDataDetail","cardDataDetailSet","_useState11","_useState12","newModalValue","newModalValueSet","_useState13","_useState14","newModalDetail","newModalDetailSet","getCashFlowTotals","tempObject","Gross Distribution","Special Distribution","Composite Tax Distro","Tax Distribution","Tax Holdback","GP Promote","Management Fee","Servicing Fee","Commission","forEach","err","sortArrayofObjects","getTableData","JSON","parse","stringify","substring","numeral","Edit","rowClone","cfsetVisible","showModalCF","tempArrayData","tempArrayColumns","count","cash","element","distrotype","amount","getBarChartData","getCardDataCash","getCardDataDetail","_useState15","_useState16","cfvisible","_useState17","_useState18","detailvisible","detailsetVisible","_useState19","_useState20","confirmLoading","setConfirmLoading","handleCancel","updateModalValues","keys","updateDetailValues","paddingTop","Inv_Type","Gross_Capital","Net_Capital","Date_Inv","Date_Eliminate","marginTop","barGap","barCategoryGap","modal","onOk","handlePost","onCancel","destroyOnClose","addonBefore","parseInt","_value","cleanFormatting","fetchObject","udpateInvCF","href","slice","updateInvDetail","req","dispatch","fetch","method","headers","Content-Type","response","handlePostState","InvestorsInvIDContainer","investorTest","InvestorDetailInvid","fetchStaticObject","loadFunds","loadFundsSize","loadInvestments","loadDistributions","loadDistributionsByFund","loadcfTotals","loadInvestors","loadLogin","loadInvestorsInvID","loadInvestorsInvIDTest","handleStaticGet","json","handleStaticGetState","urlObject","handleVariableGet","path","string","handleGetUrl","handleVariableGetState","Content","withRouter","loginStatus","loginStatusSet","history","browserHistory","browserHistorySet","loggedout","getComponents","loggedin","overflowX","NavTop_NavTop","NavSide_NavSide","react_router","exact","component","loginValue","App","rootReducer","combineReducers","arguments","ID","update","0","defineProperty","$set","enhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","thunk","store","createStore","reducers","ReactDOM","es","AppContainer","document","getElementById","URL","process","origin","addEventListener","contentType","get","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.f197350a.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Statistic, Card, Col, Icon } from 'antd'\r\n\r\nfunction InvestmentsCard(props) {\r\n    let investmentInfo = props.fundsSize.reduce((a, b)=>a + b.InvID_Count,0)\r\n    let investmentGrossCapital = props.fundsSize.reduce((a, b)=>a + b.Sum_of_Gross_Capital,0)\r\n    let investmentNetCapital = props.fundsSize.reduce((a, b)=>a + b.Sum_of_Net_Capital,0)\r\n  return (\r\n    <React.Fragment>\r\n        <Col span={3}>\r\n            <Card>\r\n                <Statistic\r\n                title=\"Current Investments\"\r\n                value={investmentInfo}\r\n                precision={0}\r\n                valueStyle={{ color: '#05386b', fontWeight: 'bold' }}\r\n                prefix={<Icon type=\"user\"/>}\r\n                suffix=\"\"\r\n                />\r\n            </Card>\r\n        </Col>\r\n        <Col span={4}>\r\n            <Card>\r\n                <Statistic\r\n                title=\"Total Gross Capital\"\r\n                value={investmentGrossCapital}\r\n                precision={0}\r\n                valueStyle={{ color: '#05386b', fontWeight: 'bold' }}\r\n                prefix=\"$\"\r\n                suffix=\"\"\r\n                />\r\n            </Card>\r\n        </Col>\r\n        <Col span={4}>\r\n            <Card>\r\n                <Statistic\r\n                title=\"Total Net Capital\"\r\n                value={investmentNetCapital}\r\n                precision={0}\r\n                valueStyle={{ color: '#05386b', fontWeight: 'bold' }}\r\n                prefix=\"$\"\r\n                suffix=\"\"\r\n                />\r\n            </Card>\r\n        </Col>\r\n    </React.Fragment>\r\n  );\r\n}\r\nexport default InvestmentsCard;","import { connect } from \"react-redux\";\r\nimport InvestmentsCard from \"../../components/Main/InvestmentsCard\";\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    investments: state.investments,\r\n    fundsSize: state.fundsSize\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(InvestmentsCard);","import React from \"react\";\r\nimport { Statistic, Card, Col } from 'antd'\r\n\r\nfunction DistributionsCard(props) {\r\n    let distroTotal\r\n    let mgmtTotal\r\n    let servTotal\r\n    let feeValues =()=>{\r\n      if (props.cfTotals.length > 0) {\r\n        distroTotal = props.cfTotals[0]['Gross']+props.cfTotals[0]['Special']+props.cfTotals[0]['Tax']+props.cfTotals[0]['Composite']\r\n        mgmtTotal = props.cfTotals[0]['Management']\r\n        servTotal = props.cfTotals[0]['Servicing']\r\n      }\r\n      return {mgmtTotal, servTotal}\r\n    }\r\n    feeValues()\r\n  return (\r\n    <React.Fragment>\r\n        <Col span={4}>\r\n            <Card>\r\n                <Statistic\r\n                title=\"Total Distributions Paid\"\r\n                precision={0}\r\n                valueStyle={{ color: '#05386b', fontWeight: 'bold' }}\r\n                prefix=\"$\"\r\n                suffix=\"\"\r\n                value={distroTotal}\r\n                >\r\n                </Statistic>\r\n            </Card>\r\n        </Col>\r\n        <Col span={4}>\r\n            <Card>\r\n                <Statistic\r\n                title=\"Total Management Fees Paid\"\r\n                precision={0}\r\n                valueStyle={{ color: '#05386b', fontWeight: 'bold' }}\r\n                prefix=\"$\"\r\n                suffix=\"\"\r\n                value={mgmtTotal}\r\n                >\r\n                </Statistic>\r\n            </Card>\r\n          </Col>\r\n          <Col span={4}>\r\n            <Card>\r\n                <Statistic\r\n                title=\"Total Servicing Fees Paid\"\r\n                precision={0}\r\n                valueStyle={{ color: '#05386b', fontWeight: 'bold' }}\r\n                prefix=\"$\"\r\n                suffix=\"\"\r\n                value={servTotal}\r\n                >\r\n                </Statistic>\r\n            </Card>\r\n        </Col>\r\n    </React.Fragment>\r\n  );\r\n}\r\nexport default DistributionsCard;","import React from \"react\";\r\nimport { FunnelChart, Tooltip, Funnel, LabelList, Cell } from \"recharts\"\r\n\r\nfunction FunnelChartDash(props) {\r\n  const COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042'];\r\n  return (\r\n    <div className='autoMargin'>\r\n      <h3>{props.title}</h3>\r\n      <FunnelChart width={600} height={400} >\r\n          <Tooltip/>\r\n          <Funnel data={props.data} dataKey={props.dataKey} nameKey={props.nameKey}>\r\n            {props.data.map((entry, index) => <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />)}\r\n            <LabelList position=\"center\" fill=\"#ffffff\" font-weight=\"bold\" dataKey={props.shortName}/>\r\n          </Funnel>\r\n      </FunnelChart >\r\n    </div>\r\n  );\r\n}\r\nexport default FunnelChartDash;","import React from \"react\";\r\nimport FunnelChartDash from '../Reusable/FunnelChart'\r\n\r\n//Proivde $ comparison between different distribution types\r\nfunction DistroFunnelChart(props) {\r\n    let data = () =>{\r\n        let spec_distro \r\n        let gross_distro \r\n        let tax_distro \r\n        let comp_distro \r\n         if(props.cfTotals.length>0){\r\n             spec_distro = props.cfTotals[0][\"Special\"]\r\n             gross_distro = props.cfTotals[0][\"Gross\"]\r\n             tax_distro = props.cfTotals[0][\"Tax\"]\r\n             comp_distro = props.cfTotals[0][\"Composite\"]\r\n            } \r\n        return data = [\r\n            {name:'Special Distribution', value: spec_distro, shortName:'Special'},\r\n            {name:'Gross Distribution', value: gross_distro, shortName:'Gross'},\r\n            {name:'Composite Distribution', value: comp_distro, shortName:'Composite'},\r\n            {name:'Tax Distribution', value: tax_distro,  shortName:'Tax'},\r\n        ]\r\n    }\r\n  return (\r\n    <div className='autoMargin'>\r\n      <FunnelChartDash data={data()} title='Distribution by Type' dataKey='value' nameKey='name' shortName='shortName'/>\r\n    </div>\r\n  )\r\n}\r\nexport default DistroFunnelChart;","import { connect } from \"react-redux\";\r\nimport DistributionsCard from '../../components/Main/DistributionsCardComponent';\r\nimport DistroFunnelChart from '../../components/Main/DistroFunnelChart'\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    cfTotals: state.cfTotals\r\n  };\r\n}\r\n\r\nconst mapState= connect(mapStateToProps)\r\nexport const DistroCardsContainer = mapState(DistributionsCard)\r\nexport const DistroFunnelContainer = mapState(DistroFunnelChart)","import React from \"react\";\r\nimport { Row } from 'antd'\r\nimport InvestmentsContainer from '../../containers/Main/InvestmentsContainer'\r\nimport { DistroCardsContainer } from '../../containers/Main/DistributionTotalsContainer'\r\n\r\nfunction Cards(){\r\n    return(\r\n        <div style={{ background: '#ECECEC', padding: '25px' }}>\r\n        <Row gutter={15}>\r\n            <InvestmentsContainer/>\r\n            <DistroCardsContainer/>\r\n        </Row>\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Cards\r\n","import React from \"react\";\r\nimport { PieChart, Pie, Cell, Legend } from \"recharts\"\r\n\r\nfunction PieChartDash(props) {\r\n  const COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042'];\r\n  return (\r\n    <div>\r\n      <h3>{props.title}</h3>\r\n      <PieChart width={500} height={500} >\r\n          <Pie data={props.data} dataKey={props.dataKey} nameKey={props.nameKey} label legendType=\"square\"  fill=\"#000\">\r\n            {props.data.map((entry, index) => <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />)}\r\n          </Pie>\r\n          <Legend/>\r\n      </PieChart >\r\n    </div>\r\n  );\r\n}\r\nexport default PieChartDash;","import React from \"react\";\r\nimport PieChartDash from '../Reusable/PieChart'\r\n\r\n//Proivde $ comparison between funds\r\nfunction FundsPieChart(props) {\r\n  return (\r\n    <div className='autoMargin'>\r\n      <PieChartDash data={props.fundsSize} title='Fund Size' dataKey='Sum_of_Gross_Capital' nameKey='Fund_ID'/>\r\n    </div>\r\n  )\r\n}\r\nexport default FundsPieChart;\r\n","import { connect } from \"react-redux\";\r\nimport FundsPieChart from \"../../components/Main/FundsPieChart\";\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    fundsSize: state.fundsSize\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(FundsPieChart);","import React from \"react\";\r\n\r\nfunction Funds(props) {\r\n  return (\r\n    <div>\r\n    <p className=\"App-intro\">{props.funds.map((row,index) => (\r\n        <li key={index}>  {row.Fund_ID}, {row.Feeder} </li>\r\n      ))}</p>\r\n    </div>\r\n  );\r\n}\r\nexport default Funds;","import React, { useState, useEffect } from \"react\";\r\nimport 'antd/dist/antd.css';\r\nimport { Button, Menu, Dropdown, Icon } from 'antd';\r\n\r\nconst Funds=(props)=>{\r\n\r\n    const [selectedFund, selectedFundSet] = useState(\"All\")\r\n\r\n    const distinct = (value, index, self)=>{\r\n        return self.indexOf(value) === index\r\n    }\r\n\r\n    let fundsListArray = props.funds.map((row)=> row.Fund_ID)\r\n    let fundsList = fundsListArray.filter(distinct)\r\n    fundsList.sort()\r\n    fundsList.unshift(\"All\")\r\n\r\n    function handleFundDropDown (){\r\n        \r\n        const fundsListArray = fundsList.map((row)=> <Menu.Item>{row}</Menu.Item>)\r\n        return (\r\n        <Menu onClick={handleMenuClick}>\r\n            {fundsListArray}\r\n        </Menu>\r\n        )\r\n    }\r\n\r\n    function handleMenuClick(e) {\r\n        selectedFundSet(e.item.props.children)\r\n      }\r\n      \r\n    useEffect(()=>{\r\n\r\n    },[])\r\n\r\nreturn(\r\n    <React.Fragment>\r\n        <Dropdown overlay={handleFundDropDown}>\r\n            <Button>\r\n                {selectedFund} <Icon type=\"down\" />\r\n            </Button>\r\n        </Dropdown>\r\n    </React.Fragment>\r\n)\r\n\r\n}\r\n\r\nexport default Funds","import React from \"react\";\r\nimport { List } from 'antd'\r\n\r\nfunction FundsCard(props) {\r\n    const distinct = (value, index, self)=>{\r\n        return self.indexOf(value) === index\r\n    }\r\n    let fundsListArray = props.funds.map((row)=> row.Fund_ID)\r\n    let fundsList = fundsListArray.filter(distinct)\r\n\r\n  return (\r\n    <div>\r\n        <List\r\n        header={<div>Fund List</div>}\r\n        bordered\r\n        dataSource={fundsList}\r\n        style={{minWidth: 550, marginLeft: 200}}\r\n        renderItem={item => (\r\n            <List.Item>\r\n            {/* <Typography.Text mark>[ITEM]</Typography.Text>*/} {item} \r\n            </List.Item>\r\n        )}\r\n        />\r\n    </div>\r\n  );\r\n}\r\nexport default FundsCard;","import { connect } from \"react-redux\";\r\nimport Funds from \"../../components/Main/FundsComponent\";\r\nimport FundsMain from \"../../components/Funds/Funds\";\r\nimport FundsCard from '../../components/Funds/FundsList'\r\n\r\nfunction mapStateToProps(state) { \r\n  return {\r\n    funds: state.funds\r\n  };\r\n}\r\n\r\nconst mapState= connect(mapStateToProps)\r\nexport const FundsContainer = mapState(FundsMain)\r\nexport const FundsResult = mapState(Funds)\r\nexport const FundsCardResult = mapState(FundsCard)","import React from \"react\";\r\nimport { AreaChart, XAxis, YAxis, CartesianGrid, Tooltip, Area } from 'recharts'\r\nimport moment from 'moment'\r\n\r\nfunction DistroChart(props) {\r\n    //This is to get the unique date values as well as format the dates\r\n    const distinct = (value, index, self)=>{\r\n        return self.indexOf(value) === index\r\n    }\r\n    let distoDatesArray = props.distributions.map((row)=> moment(row.CF_Date).format('MM/YY'))\r\n    let datesList = distoDatesArray.filter(distinct)\r\n    function createNewCashflowObject(){\r\n        let tempArray = []\r\n        datesList = datesList.sort()\r\n        for (let x=0; x < datesList.length; x++){\r\n            let spec_distro = 0\r\n            let gross_distro = 0\r\n            let tax_distro = 0\r\n            let comp_distro = 0\r\n            for (let i=0; i < props.distributions.length; i++){\r\n                if(datesList[x] === moment(props.distributions[i].CF_Date).format('MM/YY')){\r\n                    switch(props.distributions[i].Code_Name){\r\n                        case \"Special Distribution\":\r\n                            spec_distro = spec_distro + Math.round(props.distributions[i].CF_Amount)\r\n                        break\r\n                        case \"Gross Distribution\":\r\n                            gross_distro = gross_distro + Math.round(props.distributions[i].CF_Amount)\r\n                        break\r\n                        case \"Tax Distribution\":\r\n                            tax_distro = tax_distro + Math.round(props.distributions[i].CF_Amount)\r\n                        break\r\n                        case \"Composite Tax Distro\":\r\n                            comp_distro = comp_distro + Math.round(props.distributions[i].CF_Amount)\r\n                        break\r\n                        default:\r\n                    }\r\n                    \r\n                }\r\n            }\r\n                tempArray.push({\r\n                    Spec_Distro:spec_distro, \r\n                    Gross_Distro:gross_distro, \r\n                    Comp_Distro:comp_distro, \r\n                    Tax_Distro:tax_distro, \r\n                    CF_Date:datesList[x]\r\n                })\r\n        }\r\n        return tempArray\r\n    }\r\n\r\n  return (\r\n        <div className='autoMargin'>\r\n            <h3>Distribution History</h3>\r\n            <AreaChart width={1050} height={450} data={createNewCashflowObject()}\r\n            margin={{ top: 10, right: 50, left: 50, bottom: 0 }}>\r\n            <defs>\r\n                <linearGradient id=\"colorSD\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n                <stop offset=\"100%\" stopColor=\"#0088FE\" stopOpacity={0.8}/>\r\n                <stop offset=\"75%\" stopColor=\"#0088FE\" stopOpacity={0}/>\r\n                </linearGradient>\r\n                <linearGradient id=\"colorGD\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n                <stop offset=\"100%\" stopColor=\"#00C49F\" stopOpacity={0.8}/>\r\n                <stop offset=\"75%\" stopColor=\"#00C49F\" stopOpacity={0}/>\r\n                </linearGradient>\r\n                <linearGradient id=\"colorTD\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n                <stop offset=\"100%\" stopColor=\"#FF8042\" stopOpacity={0.8}/>\r\n                <stop offset=\"75%\" stopColor=\"#FF8042\" stopOpacity={0}/>\r\n                </linearGradient>\r\n                <linearGradient id=\"colorCD\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n                <stop offset=\"100%\" stopColor=\"#FFBB28\" stopOpacity={0.8}/>\r\n                <stop offset=\"75%\" stopColor=\"#FFBB28\" stopOpacity={0}/>\r\n                </linearGradient>\r\n            </defs>\r\n            <XAxis dataKey=\"CF_Date\" />\r\n            <YAxis dataKey=\"Spec_Distro\"/>\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <Tooltip />\r\n            <Area type=\"monotone\" dataKey=\"Spec_Distro\" stroke=\"#0088FE\" fillOpacity={1} fill=\"url(#colorSD)\" />\r\n            <Area type=\"monotone\" dataKey=\"Gross_Distro\" stroke=\"#0088FE\" fillOpacity={1} fill=\"url(#colorGD)\" />\r\n            <Area type=\"monotone\" dataKey=\"Comp_Distro\" stroke=\"#FFBB28\" fillOpacity={1} fill=\"url(#colorCD)\" />\r\n            <Area type=\"monotone\" dataKey=\"Tax_Distro\" stroke=\"#FF8042\" fillOpacity={1} fill=\"url(#colorTD)\" />\r\n            </AreaChart>\r\n        </div>\r\n  );\r\n}\r\nexport default DistroChart;","import { connect } from \"react-redux\";\r\nimport DistroChart from '../../components/Main/DistoChart'\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    distributions: state.distributions,\r\n  };\r\n}\r\n\r\nconst mapState= connect(mapStateToProps)\r\nexport const DistroChartContainer = mapState(DistroChart)","import React from \"react\";\r\nimport {BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend} from 'recharts'\r\nimport moment from 'moment'\r\n\r\nfunction FundsDistroChart(props) {\r\n    //This is to get the unique date values as well as format the dates\r\n    const distinct = (value, index, self)=>{\r\n        return self.indexOf(value) === index\r\n    }\r\n    let distroFundsArray = props.distributionsFund.map((row)=> row.Fund_ID)\r\n    let fundsList = distroFundsArray.filter(distinct)\r\n    function createNewCashflowObject(){\r\n        let tempArray = []\r\n        fundsList = fundsList.sort()\r\n        for (let x=0; x < fundsList.length; x++){\r\n            let spec_distro = 0\r\n            let gross_distro = 0\r\n            let tax_distro = 0\r\n            let comp_distro = 0\r\n            for (let i=0; i < props.distributionsFund.length; i++){\r\n                if(fundsList[x] === props.distributionsFund[i].Fund_ID){\r\n                    switch(props.distributionsFund[i].Code_Name){\r\n                        case \"Special Distribution\":\r\n                            spec_distro = spec_distro + Math.round(props.distributionsFund[i].CF_Amount)\r\n                        break\r\n                        case \"Gross Distribution\":\r\n                            gross_distro = gross_distro + Math.round(props.distributionsFund[i].CF_Amount)\r\n                        break\r\n                        case \"Tax Distribution\":\r\n                            tax_distro = tax_distro + Math.round(props.distributionsFund[i].CF_Amount)\r\n                        break\r\n                        case \"Composite Tax Distro\":\r\n                            comp_distro = comp_distro + Math.round(props.distributionsFund[i].CF_Amount)\r\n                        break\r\n                        default:\r\n                    }\r\n                    \r\n                }\r\n            }\r\n                tempArray.push({\r\n                    Spec_Distro:spec_distro, \r\n                    Gross_Distro:gross_distro, \r\n                    Comp_Distro:comp_distro, \r\n                    Tax_Distro:tax_distro, \r\n                    Fund_ID:fundsList[x]\r\n                })\r\n        }\r\n        return tempArray\r\n    }\r\n\r\n  return (\r\n    <div className='autoMargin'>\r\n        <h3>Distribution by Funds</h3>\r\n        <BarChart width={600} height={450} data={createNewCashflowObject()}\r\n            margin={{top: 20, right: 30, left: 20, bottom: 5}}>\r\n        <CartesianGrid strokeDasharray=\"3 3\"/>\r\n        <XAxis dataKey=\"Fund_ID\"/>\r\n        <YAxis/>\r\n        <Tooltip/>\r\n        <Legend />\r\n        <Bar dataKey=\"Spec_Distro\" stackId=\"a\" fill=\"#0088FE\" />\r\n        <Bar dataKey=\"Gross_Distro\" stackId=\"a\" fill=\"#00C49F\" />\r\n        <Bar dataKey=\"Comp_Distro\" stackId=\"a\" fill=\"#FF8042\" />\r\n        <Bar dataKey=\"Tax_Distro\" stackId=\"a\" fill=\"#FFBB28\" />\r\n        </BarChart>\r\n    </div>\r\n  );\r\n}\r\nexport default FundsDistroChart;","import { connect } from \"react-redux\";\r\nimport FundsDistroChart from '../../components/Main/FundDistroChart'\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    distributionsFund: state.distributionsFund,\r\n  };\r\n}\r\n\r\nconst mapState= connect(mapStateToProps)\r\nexport const DistroFundsChartContainer = mapState(FundsDistroChart)","import React from \"react\";\r\nimport { Layout } from 'antd'\r\nimport Cards from './Cards'\r\nimport FundsSizeContainer from '../../containers/Main/FundsSizeContainer'\r\nimport {FundsCardResult} from '../../containers/Funds/FundsContainer'\r\nimport { DistroChartContainer } from '../../containers/Main/DistributionContainer'\r\nimport { DistroFunnelContainer } from '../../containers/Main/DistributionTotalsContainer'\r\nimport { DistroFundsChartContainer } from '../../containers/Main/DistrbutionTotalsFundsContainer'\r\n\r\n//const { Content } = Layout;\r\n\r\nfunction Main(props) {\r\n  return (\r\n    <Layout>\r\n      <Cards/>\r\n      <h1 className='mainContainer'>Distribution Information</h1>\r\n      <div className='container'>\r\n        <DistroFunnelContainer/>\r\n        <DistroChartContainer/>\r\n      </div>\r\n      <h1 className='mainContainer'>Fund Information</h1>\r\n      <div className='container'>\r\n        <DistroFundsChartContainer/>\r\n        <FundsSizeContainer/>\r\n      </div>\r\n    </Layout>\r\n  );\r\n}\r\nexport default Main;","\r\nimport React, { useState, useEffect } from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport { Select, Spin, Button } from 'antd';\r\nimport debounce from 'lodash/debounce';\r\n\r\nconst { Option } = Select;\r\n\r\nfunction Search (props){\r\n  \r\n    const [data, dataSet] = useState([])\r\n    const [value, valueSet] = useState()\r\n    const [fetching, fetchingSet] = useState(false)\r\n    //Used to compensate for state changes delay\r\n    let immediateValue = ''\r\n\r\n    //Update mapper and getSearchable items to add/remove searchable \r\n    const mapper = {\r\n      Fund_ID: 'fund',\r\n      Account_Name: 'investor',\r\n      InvID: 'invid',\r\n      CID: 'cid',\r\n      SID: 'sid',\r\n      VID: 'vid',\r\n    }\r\n\r\n    let getSearchableItems =(res)=>{\r\n      let body = []\r\n      let items = {\r\n        funds: fetchProps(res, props.funds, 'Fund_ID'),\r\n        names: fetchProps(res, props.investments, 'Account_Name'),\r\n        sid: fetchProps(res, props.investments, 'SID'),\r\n        invid: fetchProps(res, props.investments, 'InvID'),\r\n        cid: fetchProps(res, props.investments, 'CID'),\r\n        vid: fetchProps(res, props.investments, 'VID'),\r\n      }\r\n      for (let [key, value] of Object.entries(items)) {\r\n        body.push(value)\r\n      }\r\n      return body  \r\n    }\r\n\r\n    let fetchProps = (value, data, key) =>{\r\n        let object\r\n        if (typeof data[0][key] === 'string'){\r\n             object = data.sort((a,b)=>a[key].localeCompare(b[key]))\r\n        }else {\r\n             object = data.sort((a,b)=>a[key] - b[key])\r\n        }\r\n        let array = []\r\n            for (let i=0; i<object.length; i++){\r\n                //check if fund name containes typed letters\r\n                if (object[i][key].toString().toUpperCase().includes(value.toString().toUpperCase())) {\r\n                    //handle last object -1 error & remove duplicate values \r\n                    if (object[i-1] === undefined || object[i][key] != object[i-1][key]){\r\n                        array.push(key + ': ' + object[i][key])\r\n                    } \r\n                }\r\n            }\r\n        return array\r\n    }\r\n\r\n    let handleSearchArray=(array)=>{\r\n        let result = []\r\n        for(let x=0; x<array.length; x++){\r\n            for(let i=0; i<array[x].length; i++){\r\n                result.push(array[x][i])\r\n            }\r\n        }\r\n        return result\r\n    }\r\n\r\n    let fetchResult = search => {\r\n      //Clearing out value and search results on each new search, initiate loading circle\r\n      dataSet([])\r\n      valueSet()\r\n      fetchingSet(true)\r\n      //Getting props and filter based on search string\r\n      let body = getSearchableItems(search)\r\n      //If search string is empty clear filterd values and stop loading icon\r\n      if(search === ''){\r\n        dataSet([])\r\n        fetchingSet([false])\r\n      }else{\r\n        //If search string has value map \r\n        body = handleSearchArray(body)\r\n        const data = body.map((res) =>({\r\n              text: res,\r\n              value: res,\r\n          }));\r\n          dataSet(data)\r\n          fetchingSet([false])\r\n      }\r\n    }\r\n    \r\n    let handleURL=()=>{\r\n      //if immediateValue is empty use state value else use the immediate value\r\n      let clone = immediateValue === '' ? value : immediateValue\r\n      let key = clone.substr(0, clone.indexOf(':'))\r\n      let detail = clone.split(':').pop().trim()\r\n      key = mapper[key]\r\n      console.log(props.location)\r\n      props.location.replace({\r\n        pathname: '/' +key  +'/' + detail,\r\n        search: ''\r\n      })\r\n    }\r\n\r\n    let handleChange = (res) => {\r\n        immediateValue = res\r\n        valueSet(res)\r\n        dataSet([])\r\n        fetchingSet(false)\r\n    };\r\n\r\n    //Allows enter key to trigger search button\r\n    let handlerSearchEnter=(event)=>{\r\n      //13=enter key. If immediatevalue is blank dont fire.\r\n      if (event.keyCode === 13 && immediateValue != ''){\r\n        handleURL()\r\n      }\r\n    }\r\n\r\n    //Fetch results but added a timing delay to prevent constant lookups\r\n    let fetchAll = debounce(fetchResult, 100);\r\n      return (\r\n        <div style={{marginLeft: 'auto', marginRight: 'auto', alignSelf: 'center'}}>\r\n          <Select\r\n            showSearch\r\n            style={{width: '400px', minWidth:'100px', fontSize: '16pt', marginLeft: 'auto', marginRight: 'auto'}}\r\n            mode=\"default\"\r\n            allowClear={true}\r\n            value={value}\r\n            placeholder=\"Search\"\r\n            notFoundContent={fetching ? <Spin size=\"small\" /> : null}\r\n            filterOption={false}\r\n            onSearch={fetchAll}\r\n            onChange={(action)=>handleChange(action)}\r\n            showArrow={false}\r\n            onInputKeyDown={(action)=>handlerSearchEnter(action)}\r\n          >\r\n            {data.map(d => (\r\n              <Option key={d.value}>{d.text}</Option>\r\n            ))}\r\n          \r\n          </Select>\r\n          <Button \r\n          type=\"primary\" \r\n          shape=\"circle\" \r\n          icon=\"search\"\r\n          enterButton=\"Search\"\r\n          onSearch={handleURL} \r\n          onClick= {handleURL}\r\n          style={{fontSize: '16pt', alignSelf: 'center', marginLeft: '15px'}}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n\r\n  export default Search;\r\n","import { connect } from \"react-redux\";\r\nimport   Search  from '../../components/Layout/Search'\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    funds: state.funds,\r\n    investments: state.investments\r\n  };\r\n}\r\n\r\nconst mapState= connect(mapStateToProps)\r\nexport const SearchResult = mapState(Search)\r\n","import React from 'react';\r\nimport { Layout, Menu, Icon, Input } from 'antd';\r\nimport {SearchResult} from '../../containers/Layout/SearchCont'\r\nconst { Header} = Layout;\r\nconst { SubMenu } = Menu;\r\n\r\n\r\nexport default class NavTop extends React.Component {\r\n  state = {\r\n    current: 'mail',\r\n  };\r\n  handleClick = e => {\r\n    console.log('click ', e);\r\n    this.setState({\r\n      current: e.key,\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <Header style={{background: '#fff', padding: 0}}>\r\n        <Menu style={{maxHeight: 65, display: 'flex', lineHeight: '64px'}} onClick={this.handleClick} selectedKeys={[this.state.current]} mode=\"horizontal\">\r\n          <Menu.Item key=\"logo\" style={{fontWeight: 'bolder', fontSize: 26}}>\r\n            <Icon type=\"code\" style={{fontSize: 22}} />\r\n            Dashboard\r\n          </Menu.Item>\r\n          <SearchResult location={this.props.location} />\r\n          <SubMenu\r\n            title={\r\n              <span className=\"submenu-title-wrapper\">\r\n                <Icon type=\"user\" />\r\n                User\r\n              </span>\r\n            }\r\n          >\r\n            <Menu.ItemGroup title=\"General\">\r\n              <Menu.Item key=\"setting:1\">System Settings</Menu.Item>\r\n              <Menu.Item key=\"setting:2\">Theme</Menu.Item>\r\n            </Menu.ItemGroup>\r\n            <Menu.ItemGroup title=\"User\">\r\n              <Menu.Item key=\"setting:3\">Settings</Menu.Item>\r\n              <Menu.Item key=\"setting:4\">Log Out</Menu.Item>\r\n            </Menu.ItemGroup>\r\n          </SubMenu>\r\n        </Menu>\r\n      </Header>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport { Layout, Menu, Icon } from 'antd'\r\n\r\nconst { Sider } = Layout;\r\nconst { SubMenu } = Menu;\r\n\r\n\r\nexport default class NavSide extends React.Component {\r\n  state = {\r\n    collapsed: false,\r\n    navWidth:  200\r\n  };\r\n\r\n  onCollapse = collapsed => {\r\n    this.setState({ collapsed });\r\n    if (this.state.navWidth === 200){\r\n      this.setState({navWidth: 80})\r\n    }else{\r\n      this.setState({navWidth: 200})\r\n    }\r\n    \r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Layout  style={{maxWidth: this.state.navWidth, minHeight: \"100vh\"}}>\r\n        <Sider collapsible collapsed={this.state.collapsed} onCollapse={this.onCollapse}>\r\n          <div className=\"logo\" />\r\n          <Menu theme=\"dark\" defaultSelectedKeys={['1']} mode=\"inline\">\r\n\r\n            <Menu.Item className='navlink' key=\"1\">\r\n              <Icon type=\"pie-chart\" />\r\n              <span>\r\n                <Link className='navlink' to='/'> Home </Link>\r\n              </span>\r\n            </Menu.Item>\r\n\r\n            <Menu.Item className='navlink' key=\"2\">\r\n              <Icon type=\"compass\" />\r\n              <span>\r\n                <Link className='navlink' to='/funds'> Funds </Link>\r\n              </span>\r\n            </Menu.Item>\r\n\r\n            <SubMenu\r\n              key=\"sub1\"\r\n              title={\r\n                <span>\r\n                <Icon type=\"team\" />\r\n                <span>\r\n                    <Link className='navlink' to='/investors'> Investors </Link>\r\n                </span>\r\n                </span>\r\n              }\r\n            > <Menu.Item key=\"4\">\r\n                <Link className='navlink' to='/investors/table'>\r\n                  Table\r\n                </Link>\r\n              </Menu.Item>\r\n            </SubMenu>\r\n            \r\n            <SubMenu\r\n              key=\"sub2\"\r\n              title={\r\n                <span>\r\n                  <Icon type=\"home\" />\r\n                  <span>Properties</span>\r\n                </span>\r\n              }\r\n            >\r\n              <Menu.Item key=\"6\">Pipeline</Menu.Item>\r\n              <Menu.Item key=\"8\">Performance</Menu.Item>\r\n            </SubMenu>\r\n            <Menu.Item key=\"3\">\r\n              <Icon type=\"desktop\" />\r\n              <span>\r\n              <Link className='navlink' to='/cashflows'> Cashflows </Link>\r\n              </span>\r\n            </Menu.Item>\r\n          </Menu>\r\n        </Sider>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\n","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Table, Input, Button, Icon }  from 'antd';\r\n\r\nclass InvestorsTable extends Component{\r\n    state = {\r\n        searchText: '',\r\n      };\r\n      getColumnSearchProps = dataIndex => ({\r\n        filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\r\n          <div style={{ padding: 8 }}>\r\n            <Input\r\n              ref={node => {\r\n                this.searchInput = node;\r\n              }}\r\n              placeholder={`Search ${dataIndex}`}\r\n              value={selectedKeys[0]}\r\n              onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\r\n              onPressEnter={() => this.handleSearch(selectedKeys, confirm)}\r\n              style={{ width: 188, marginBottom: 8, display: 'block' }}\r\n            />\r\n            <Button\r\n              type=\"primary\"\r\n              onClick={() => this.handleSearch(selectedKeys, confirm)}\r\n              icon=\"search\"\r\n              size=\"small\"\r\n              style={{ width: 90, marginRight: 8 }}\r\n            >\r\n              Search\r\n            </Button>\r\n            <Button onClick={() => this.handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\r\n              Reset\r\n            </Button>\r\n          </div>\r\n        ),\r\n        filterIcon: filtered => (\r\n          <Icon type=\"search\" style={{ color: filtered ? '#1890ff' : undefined }} />\r\n        ),\r\n        onFilter: (value, record) =>\r\n          record[dataIndex]\r\n            .toString()\r\n            .toLowerCase()\r\n            .includes(value.toLowerCase()),\r\n        onFilterDropdownVisibleChange: visible => {\r\n          if (visible) {\r\n            setTimeout(() => this.searchInput.select());\r\n          }\r\n        },\r\n      })\r\n\r\n    handleSearch = (selectedKeys, confirm) => {\r\n        confirm();\r\n        this.setState({ searchText: selectedKeys[0] });\r\n      }\r\n    \r\n    handleReset = clearFilters => {\r\n        clearFilters();\r\n        this.setState({ searchText: '' });\r\n      }\r\n\r\n    render(){\r\n      let columns = [\r\n        {title: 'InvID', dataIndex:'InvID',  key: 'InvID', ...this.getColumnSearchProps('InvID'), render: text => <Link  to={\"/invid/\"+text}>{text}</Link>},\r\n        {title: 'VID', dataIndex:'VID',  key: 'VID', ...this.getColumnSearchProps('VID')},\r\n        {title: 'SID', dataIndex:'SID', key: 'SID', ...this.getColumnSearchProps('SID')},\r\n        {title: 'CID', dataIndex:'CID',  key: 'CID', ...this.getColumnSearchProps('CID')},\r\n        {title: 'Name', dataIndex:'Account_Name', key: 'Account_Name', ...this.getColumnSearchProps('Account_Name')},\r\n        {title: 'Feeder', dataIndex:'Feeder', key: 'Feeder', ...this.getColumnSearchProps('Feeder')},\r\n        {title: 'Inv_Type', dataIndex:'Inv_Type', key: 'Inv_Type', ...this.getColumnSearchProps('Inv_Type')},\r\n        {title: 'Date_Inv', dataIndex:'Date_Inv', key: 'Date_Inv', ...this.getColumnSearchProps('Date_Inv')},\r\n        {title: 'Date_Eliminate', dataIndex:'Date_Eliminate', key: 'String', ...this.getColumnSearchProps('Date_Eliminate')},\r\n        {title: 'Gross_Capital', dataIndex:'Gross_Capital', key: 'Gross_Capital', ...this.getColumnSearchProps('Gross_Capital')},\r\n        {title: 'Net_Capital', dataIndex:'Net_Capital', key: 'Net_Capital', ...this.getColumnSearchProps('Net_Capital')}\r\n      ]\r\n        return(\r\n            <div>\r\n                <Table pagination={{ pageSize: 20 }} columns= {columns} dataSource={this.props.investors} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default InvestorsTable","import { connect } from \"react-redux\";\r\nimport InvestorsTable from \"../../components/Investors/InvestorsTable\";\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    investors: state.investors\r\n  };\r\n}\r\n\r\nexport const InvestorsTableResults = connect(mapStateToProps)(InvestorsTable);","import React, { useState, useEffect, Component } from \"react\";\r\nimport { Form, Input, Button } from 'antd'\r\n\r\nfunction Login(props){\r\n    const [userName, userNameSet] = useState()\r\n    const [password, passwordSet] = useState()\r\n    const [invalid, invalidSet] = useState()\r\n\r\n    //This is to make login faster for development would be removed along with default values\r\n    useEffect(()=>{\r\n        userNameSet(\"admin\")\r\n        passwordSet(\"root\")\r\n    },[]) \r\n\r\n    //Handles login btn or \"enter\" key updates login based on  api response or throws error\r\n    function loginbtn(e){\r\n        e.preventDefault()\r\n        props.handleLogin([userName, password])\r\n        setTimeout(()=>{\r\n            invalidSet(\"Incorrect username or password\")\r\n        },500)\r\n    } \r\n\r\n    if (props.loginState['ids'] != undefined){\r\n        props.handleLogin()\r\n    }\r\n\r\n    return(\r\n        <div style={{position: \"absolute\", left: \"35%\", top:\"25%\", background: '#ECECEC', padding: '25px', width:400 }}>\r\n            <h1>Dashboard Login</h1>\r\n            <Form onSubmit={(e)=> loginbtn(e)}>\r\n                Username\r\n                <Input onChange={(e)=> userNameSet(e.target.value)} defaultValue=\"admin\" style={{margin: 5}} placeholder=\"Username\"/>\r\n                Password\r\n                <Input onChange={(e)=> passwordSet(e.target.value)} defaultValue=\"root\" style={{margin: 5}} placeholder=\"Password\"/>\r\n                <div style={{display:\"inline\"}}>\r\n                    <Button style={{margin: 5}} type=\"primary\" htmlType=\"submit\">\r\n                        Log in\r\n                    </Button>\r\n                    <div style={{color:\"red\", display: \"inline\"}}>{invalid}</div>\r\n                </div>\r\n            </Form>\r\n        </div>\r\n    );    \r\n}\r\n\r\nexport default Login\r\n","import { connect } from \"react-redux\";\r\nimport  Login  from \"../../components/Main/Login\";\r\n// import  Cards  from \"../components/Main/Cards\";\r\n\r\nfunction mapStateToProps(state) {\r\n  return { \r\n    loginState: state.loginState,\r\n  };\r\n}\r\n\r\nconst mapState= connect(mapStateToProps)\r\nexport const LoginContainer = mapState(Login)\r\n// export const LoginAppContainer = mapState(Cards)","import React, {useState, useEffect} from \"react\";\r\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip } from 'recharts'\r\nimport { Card, Input, Modal, Table, Button, Form } from 'antd'\r\nimport { useSelector } from 'react-redux'\r\nimport moment from 'moment'\r\nimport numeral from 'numeral'\r\n\r\nfunction InvestorDetail (props) {\r\n   \r\n//Props State\r\n    const propsHolder = useSelector( props => props)\r\n    const propsDetails = useSelector(props => props.investorsInvID.map(res =>res.details))\r\n    const propsCash = useSelector(props =>props.investorsInvID.map(res => res.cashflows))\r\n//Other State\r\n    const [tableData, tableDataSet] = useState([])\r\n    const [barChartData,barChartDataSet] = useState([])\r\n    const [barChartColumns,barChartColumnsSet] = useState([])\r\n    const [cardDataCash, cardDataCashSet] = useState([])\r\n    const [cardDataDetail, cardDataDetailSet] = useState([])\r\n\r\n//Modal values newModalValue is = to oldModalValue\r\n    const [newModalValue, newModalValueSet] = useState({})\r\n    const [newModalDetail, newModalDetailSet] = useState({})\r\n\r\n    function getCardDataDetail(){\r\n        let tempObject = {}\r\n        for(let element in propsDetails[0]){\r\n            tempObject = propsDetails[element][0]\r\n        }\r\n        newModalDetailSet(tempObject)\r\n        cardDataDetailSet(tempObject)\r\n    }\r\n\r\n    function getCardDataCash(){\r\n        let tempArray = []\r\n        let cash = getCashFlowTotals()\r\n        for(let element in cash){\r\n            cash[element] = numeral(cash[element]).format('0,0')\r\n            tempArray.push(<p key={element}>{element}:  {cash[element]}</p>)\r\n        }\r\n        cardDataCashSet(tempArray)\r\n    }\r\n\r\n    function getCashFlowTotals(){\r\n        const tempObject ={\r\n            'Gross Distribution': 0, 'Special Distribution':0,'Composite Tax Distro':0, 'Tax Distribution':0,\r\n            'Tax Holdback':0, 'GP Promote':0, 'Management Fee':0, 'Servicing Fee':0, 'Commission':0, \r\n        }\r\n        propsCash.forEach(array => {\r\n            array.forEach((row, index)=>{\r\n                try{\r\n                    tempObject[row.Code_Name] += row.CF_Amount\r\n                }catch(err){}\r\n            })\r\n        })\r\n        return tempObject\r\n    }\r\n\r\n    let columns = [\r\n        {title: 'Edit', dataIndex:'Edit',  key: 'Edit', width: '10%'},\r\n        {title: 'InvID', dataIndex:'InvID',  key: 'InvID', width: '15%'},\r\n        {title: 'CID', dataIndex:'CID', key: 'CID', width: '15%'},\r\n        {title: 'Type', dataIndex:'Code_Name',  key: 'Code_Name', width: '20%'},\r\n        {title: 'Amount', dataIndex:'CF_Amount', key: 'CF_Amount', width: '20%'},\r\n        {title: 'Date', dataIndex:'CF_Date',  key: 'CF_Date', width: '20%'},\r\n    ]   \r\n\r\n    //Allows table to be sorted by date\r\n    function sortArrayofObjects(a, b){\r\n        let object1 = a[\"CF_Date\"]\r\n        let object2 = b[\"CF_Date\"]\r\n        \r\n        return object1>object2 ? 1 : -1\r\n    }\r\n\r\n    function getTableData(){\r\n        let tempArray = []\r\n        const cashArray = JSON.parse(JSON.stringify(propsCash))\r\n        cashArray.forEach(array => {\r\n            array.forEach((row, index)=>{\r\n                row.CF_Date = moment(row.CF_Date.substring(0,10)).format('MM/DD/YYYY')\r\n                row.CF_Amount = numeral(row.CF_Amount).format('0,0.00')\r\n                row.Edit= (<Button type=\"primary\" key={index} onClick={()=>showModalCF(row)}>Edit</Button>)\r\n                tempArray.push(row)\r\n            })\r\n        })\r\n        tempArray.sort(sortArrayofObjects)\r\n        tableDataSet(tempArray)\r\n    }\r\n\r\n    function getBarChartData(){\r\n         //Create cashflow total card. Create array to hold barchart data. Create array to hold <Bar> tags.  \r\n        const COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042',  '#FF8042', '#FF8042', '#FF8042', '#FF8042', '#FF8042'];\r\n        let tempArrayData = []\r\n        let tempArrayColumns =[]\r\n        let count = 0\r\n        let cash = getCashFlowTotals()\r\n        for(let element in cash){\r\n            if(cash[element] > 0 ){\r\n                tempArrayData.push({distrotype: element, amount: cash[element]})\r\n                tempArrayData[count][element] = cash[element]\r\n                tempArrayColumns.push(<Bar key={element} dataKey={element} fill={COLORS[count]} />)\r\n                    count += 1\r\n            }\r\n        }\r\n        barChartColumnsSet(tempArrayColumns)\r\n        barChartDataSet(tempArrayData)\r\n    }\r\n \r\n    useEffect(()=>{\r\n        getCashFlowTotals()\r\n        getTableData()\r\n        getBarChartData()\r\n        getCardDataCash()\r\n        getCardDataDetail()\r\n    },[propsHolder]) \r\n\r\n    //Modal\r\n        const [cfvisible, cfsetVisible]= useState(false)\r\n        const [detailvisible, detailsetVisible]= useState(false)\r\n        const [confirmLoading, setConfirmLoading]= useState(false)\r\n        \r\n        function showModalCF(row){\r\n            let rowClone = {...row}\r\n            newModalValueSet(rowClone)\r\n            cfsetVisible(true)\r\n        };\r\n\r\n        function showModalDetail(){\r\n            detailsetVisible(true)\r\n        }\r\n\r\n        function handleOk () {\r\n            setConfirmLoading(true)\r\n            let result = cleanFormatting()\r\n            setTimeout(() => {\r\n                props.handlePost(result, 'udpateInvCF')\r\n                cfsetVisible(false)\r\n                setConfirmLoading(false)\r\n            }, 500);\r\n        };\r\n\r\n        function cleanFormatting(){\r\n            let clone = {...newModalValue}\r\n            clone.CF_Amount = numeral(clone.CF_Amount)._value\r\n            newModalValueSet(clone)\r\n            return clone\r\n        }\r\n\r\n        function handleOkDetail () {\r\n            setConfirmLoading(true) \r\n            setTimeout(() => {\r\n                props.handlePost(newModalDetail, 'updateInvDetail')\r\n                detailsetVisible(false)\r\n                setConfirmLoading(false)\r\n            }, 500);\r\n        };\r\n\r\n        function handleCancel () {\r\n            cfsetVisible(false)\r\n            detailsetVisible(false)\r\n          };\r\n\r\n        function updateModalValues(value){\r\n            let key = Object.keys(value)\r\n            let clone = {...newModalValue}\r\n            clone[key]  = value[key]\r\n            newModalValueSet(clone)\r\n            }\r\n    \r\n        function updateDetailValues(value){\r\n            let key = Object.keys(value)\r\n            let clone = {...cardDataDetail}\r\n            clone[key]  = value[key]\r\n            newModalDetailSet(clone)\r\n            }\r\n\r\n        \r\n    if (props != undefined){\r\n        return(\r\n            <div style={{background: '#ECECEC'}}>\r\n                <h1 style={{margin:25, marginBottom:0, fontSize:50}}>{cardDataDetail.Account_Name}</h1>\r\n                <div style={{display: 'flex',padding: 30, paddingTop:0 }}>\r\n                    <Card title='Details' bordered={false} style={{ width: 300, margin:25 }}>\r\n                        <p>InvId:           {cardDataDetail.InvID}</p>\r\n                        <p>CID:             {cardDataDetail.CID}</p>\r\n                        <p>Feeder:          {cardDataDetail.Feeder}</p>\r\n                        <p>Inv Type:        {cardDataDetail.Inv_Type}</p>\r\n                        <p>Gross Capital:   {numeral(cardDataDetail.Gross_Capital).format('0,0')}</p>\r\n                        <p>Net Capital:     {numeral(cardDataDetail.Net_Capital).format('0,0')}</p>\r\n                        <p>Start Date:      {moment(cardDataDetail.Date_Inv).format('MM/DD/YYYY')}</p>\r\n                        <p>End Date:        {moment(cardDataDetail.Date_Eliminate).format('MM/DD/YYYY')}</p>\r\n                        <Button shape='circle' icon='edit' onClick={()=>showModalDetail()} style={{marginLeft:'90%', marginTop:'40px'}}/>\r\n                    </Card>\r\n                    \r\n                    <Card title='Cashflows' bordered={false} style={{ width: 300, margin:25 }}>\r\n                        {cardDataCash}\r\n                    </Card>\r\n\r\n                    <BarChart\r\n                        width={900}\r\n                        height={500}\r\n                        data={barChartData}\r\n                        barGap={-100} \r\n                        barCategoryGap={20}\r\n                    >\r\n                        <CartesianGrid strokeDasharray=\"3 3\" />\r\n                        <XAxis dataKey=\"distrotype\" type=\"category\"/>\r\n                        <YAxis dataKey=\"amount\"/>\r\n                        <Tooltip />\r\n                        {barChartColumns}\r\n                    </BarChart>\r\n                </div>\r\n\r\n                <Modal\r\n                    title=\"Investor Detail\"\r\n                    visible={detailvisible}\r\n                    onOk={handleOkDetail}\r\n                    confirmLoading={confirmLoading}\r\n                    onCancel={handleCancel}\r\n                    destroyOnClose={true}\r\n                    >\r\n                    <Input onChange={(e)=>updateDetailValues({Account_Name: e.target.value})} style={{margin: 5}} addonBefore='Account_Name' id='Account_Name' defaultValue={cardDataDetail.Account_Name}/>\r\n                    <div style={{display: 'inline-flex'}}>\r\n                        <Input onChange={(e)=>updateDetailValues({InvID: parseInt(e.target.value)})} style={{margin: 5}} addonBefore='InvID' id='InvID' defaultValue={cardDataDetail.InvID}/>\r\n                        <Input onChange={(e)=>updateDetailValues({CID: parseInt(e.target.value)})} style={{margin: 5}} addonBefore='CID' id='CID' defaultValue={cardDataDetail.CID}/>\r\n                    </div>\r\n                    <div style={{display: 'inline-flex'}}>\r\n                        <Input onChange={(e)=>updateDetailValues({Feeder: e.target.value})} style={{margin: 5}} addonBefore='Feeder' id='Feeder' defaultValue={cardDataDetail.Feeder}/>\r\n                        <Input onChange={(e)=>updateDetailValues({Inv_Type: e.target.value})} style={{margin: 5}} addonBefore='Inv_Type' id='Inv_Type' defaultValue={cardDataDetail.Inv_Type}/>\r\n                    </div>\r\n                    <div style={{display: 'inline-flex'}}>\r\n                        <Input onChange={(e)=>updateDetailValues({Gross_Capital: numeral(e.target.value)._value})} style={{margin: 5}} addonBefore='Gross_Capital' id='Gross_Capital' defaultValue={numeral(cardDataDetail.Gross_Capital).format('0,0')}/>\r\n                        <Input onChange={(e)=>updateDetailValues({Net_Capital: numeral(e.target.value)._value})} style={{margin: 5}} addonBefore='Net_Capital' id='Net_Capital' defaultValue={numeral(cardDataDetail.Net_Capital).format('0,0')}/>\r\n                    </div>\r\n                    <div style={{display: 'inline-flex'}}>\r\n                        <Input onChange={(e)=>updateDetailValues({Date_Inv: e.target.value})} style={{margin: 5}} addonBefore='Date_Inv' id='Date_Inv' defaultValue={moment(cardDataDetail.Date_Inv).format('MM/DD/YYYY')}/>\r\n                        <Input onChange={(e)=>updateDetailValues({Date_Eliminate: e.target.value})} style={{margin: 5}} addonBefore='Date_Eliminate' id='Date_Eliminate' defaultValue={moment(cardDataDetail.Date_Eliminate).format('MM/DD/YYYY')}/>\r\n                    </div>\r\n                </Modal>\r\n\r\n                <Modal\r\n                    title=\"Edit Cash Flows\"\r\n                    visible={cfvisible}\r\n                    onOk={handleOk}\r\n                    confirmLoading={confirmLoading}\r\n                    onCancel={handleCancel}\r\n                    destroyOnClose={true}\r\n                    >\r\n                    <Form >\r\n                        <div style={{display: 'inline-flex'}}>\r\n                        <Input onChange={(e)=> updateModalValues({InvID: parseInt(e.target.value)})} style={{margin: 5}} id=\"InvID\" addonBefore='InvID' defaultValue={newModalValue.InvID}/>\r\n                        <Input onChange={(e)=> updateModalValues({CID: parseInt(e.target.value)})} style={{margin: 5}} addonBefore='CID' defaultValue={newModalValue.CID}/>\r\n                        </div>\r\n                        <Input onChange={(e)=> updateModalValues({Code_Name: e.target.value})} style={{margin: 5}} addonBefore='Type' defaultValue={newModalValue.Code_Name}/>\r\n                        <Input onChange={(e)=> updateModalValues({CF_Date: e.target.value})} style={{margin: 5}} addonBefore='Date' defaultValue={newModalValue.CF_Date}/>\r\n                        <Input onChange={(e)=> updateModalValues({CF_Amount: numeral(e.target.value)._value})} style={{margin: 5}} addonBefore='Amount' defaultValue={newModalValue.CF_Amount}/>\r\n                    </Form>\r\n                </Modal>\r\n                <Table style={{marginRight: 75, background: '#f1f3f5'}} columns= {columns} dataSource={tableData} />\r\n            </div>\r\n        )\r\n        }else{\r\n            return(\r\n                <div>z</div>\r\n            )\r\n            \r\n        }\r\n}\r\n\r\nexport default InvestorDetail","/*\r\nCreated Date:   9/24/2019\r\nAuthor:         Betori\r\nReason:         Handle all POST requests \r\nTools:          Basic JS functions that are utilized by Redux reducers\r\nLast Updated:\r\nPurpose:\r\n*/\r\n\r\n////Utility Objects\r\n// Slice url string by POST request\r\nconst urlObject = {\r\n  udpateInvCF: window.location.href.split(\"/\").slice(-1)[0],\r\n  updateInvDetail:  window.location.href.split(\"/\").slice(-1)[0]\r\n}\r\n//Fetch request URL\r\nconst fetchObject = {\r\n  udpateInvCF: \"/api/investments/invid/\"+urlObject.udpateInvCF+\"/update\",\r\n  updateInvDetail:  \"/api/investments/invid/\"+urlObject.updateInvDetail+\"/updatedetail\"\r\n}\r\n//Redux type string to call Redux reducer\r\nconst type = {\r\n  udpateInvCF: \"INVESTORS_INVID_LOADED_UPDATE\",\r\n  updateInvDetail: \"INVESTORS_INVID_LOADED_UPDATE_DETAIL\"\r\n}\r\n\r\n////Utility Functions\r\n//Handles POST request. Takes in object with data and req that directs to correct objects\r\nexport function handlePost(row, req) {\r\n  return function (dispatch) {\r\n    fetch(\r\n      fetchObject[req], {\r\n      method: \"PUT\",\r\n      headers: {\"Content-Type\": \"application/json\"},\r\n      body: JSON.stringify(row)\r\n    })\r\n    .then(response => dispatch(handlePostState(row, req)))\r\n    .catch(error => console.error('Error:', error))\r\n  }\r\n}\r\nfunction handlePostState(res, req){\r\n  return{\r\n    type: type[req],\r\n    value: res\r\n  }\r\n}\r\n\r\n  \r\n////Post request to update database\r\n//Update investor_cf\r\n// export function udpateInvCF(row) {\r\n//   return function (dispatch) {\r\n//       handleFetch(fetchObject.udpateInvCF, row)\r\n//           .then(response => dispatch(updateInvCFState(row)))\r\n//           .catch(error => console.error('Error:', error))\r\n//   }\r\n// }\r\n// function updateInvCFState(res){\r\n//   return{\r\n//     type: type.udpateInvCF, \r\n//     value: res\r\n//   }\r\n// }\r\n// //Update investor_detail  \r\n// export function updateInvDetail(row) {\r\n//   return function (dispatch) {\r\n//       handleFetch(fetchObject.updateInvDetail, row)\r\n//           .then(response => dispatch(updateInvDetailState(row)))\r\n//           .catch(error => console.error('Error:', error))\r\n//   }\r\n// }\r\n// function updateInvDetailState(res){\r\n//   return{\r\n//     type: type.updateInvDetail, \r\n//     value: res\r\n//   }\r\n// }\r\n","/*\r\nCreated Date:   Inception\r\nAuthor:         Betori\r\nReason:         Maps Investor information to state. Updates redux props and calls PUT request to update investor infor\r\nTools:          Redux\r\nLast Updated:   9/25/2019\r\nPurpose:        Uses generic function to handle all PUT requests.\r\n*/\r\n\r\nimport { connect } from \"react-redux\";\r\n// import InvestorDetailVID from \"../../../Delete/InvestorDetailVID\";\r\nimport InvestorDetailInvid from '../../components/Investors/InvestorDetailInvid'\r\nimport {handlePost} from '../../actions/put'\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    investorsInvID: state.investorsInvID,\r\n    investorTest: state.investorTest\r\n\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch){\r\n  return{\r\n    handlePost:function(result, req){\r\n      dispatch(handlePost(result, req))\r\n    },\r\n  }\r\n} \r\n\r\nexport const InvestorsInvIDContainer = connect(mapStateToProps, mapDispatchToProps)(InvestorDetailInvid)\r\n// export const InvestorsVidContainer = connect(mapStateToProps, mapDispatchToProps)(InvestorDetailVID)\r\n\r\n\r\n/*\r\nRemoved Date: 9/25/2019\r\nReason: Generic handlePost function can handle PUT requests\r\n*/\r\n    //import {updateInvestorCashFlow, updateInvestorDetail} from '../actions/actions'\r\n    // updateInvestorCashFlow: state.updateInvestorCashFlow \r\n    // updateInvDetail:function(result){\r\n    //   dispatch(updateInvDetail(result))\r\n    // }","/*\r\nCreated Date:   9/24/2019\r\nAuthor:         Betori\r\nReason:         Handle all GET requests \r\nTools:          Basic JS functions that are utilized by Redux reducers\r\nLast Updated:\r\nPurpose:\r\n*/\r\n\r\n////Utility Objects\r\n//Fetch request URL\r\nexport const fetchStaticObject = {\r\n  loadFunds:  \"/api/funds\",\r\n  loadFundsSize: \"/api/fundstotals\",\r\n  loadInvestments: \"/api/investments\",\r\n  loadDistributions: \"/api/cf/totals/monthly\",\r\n  loadDistributionsByFund: \"/api/cf/totals/funds\",\r\n  loadcfTotals: \"/api/cf/totals\",\r\n  loadInvestors: \"/api/investments\",\r\n}\r\n\r\n//Redux type string to call Redux reducer\r\nconst type = {\r\n  loadLogin: \"LOGIN_LOADED\",\r\n  loadFunds: \"FUNDS_LOADED\",\r\n  loadFundsSize: \"FUNDS_SIZE_LOADED\",\r\n  loadInvestments: \"INVESTMENTS_LOADED\",\r\n  loadDistributions: \"DISTRIBUTIONS_LOADED\",\r\n  loadDistributionsByFund: \"DISTRIBUTIONS_LOADED_FUNDS\",\r\n  loadcfTotals: \"CFTOTALS_LOADED\",\r\n  loadInvestors: \"INVESTORS_LOADED\",\r\n  loadInvestorsInvID: \"INVESTORS_INVID_LOADED\",\r\n  loadInvestorsInvIDTest: \"INVESTORS_INVID_LOADED_TEST\",\r\n  undefined: \"\"\r\n}\r\n\r\n////Utility Functions\r\n//Handles post request. Takes in object with data and req that directs to correct objects\r\nexport function handleStaticGet(req) {\r\n  return function (dispatch) {\r\n    fetch(fetchStaticObject[req])\r\n    .then( (response) => {\r\n      return response.json();})\r\n    .then(res => dispatch(handleStaticGetState(res, req)))\r\n    .catch(error => console.error('Error:', error))\r\n  }\r\n}\r\nfunction handleStaticGetState(res, req){\r\n  return{\r\n    type: type[req],\r\n    value: res\r\n  }\r\n}\r\n\r\nconst urlObject = {\r\n    loadInvestorsInvID: \"/invid/\",\r\n    loadInvestorsInvIDTest: \"/vid/\"\r\n  // loadLogin: {path: window.location.href.split(\"/\").slice(-1)[0], id: window.location.href.split(\"/\").slice(-1)[1]},\r\n  // loadFunds:  {path: window.location.href.split(\"/\").slice(-1)[0], id: \"\"},\r\n  // loadInvestorsInvIDTest: {path:pathUrl[0], id: pathUrl[1]}\r\n}\r\n\r\n\r\n\r\nexport function handleVariableGet(req, path){\r\n   // handlePath(path) \r\n  if(handleGetUrl(req, path)){\r\n    return function (dispatch) {\r\n      fetch('/api'+path)\r\n      .then( (response) => {\r\n        return response.json();})\r\n      .then(res => dispatch(handleVariableGetState(res, req)))\r\n      .catch(error => console.error('Error:', error))\r\n    }\r\n   }\r\n   //If false is returned state is set to blank. Prevents old state value from showing on screen.\r\n   return handleVariableGetState([], req);\r\n}\r\nfunction handleVariableGetState(res, req){\r\n  return{\r\n    type: type[req],\r\n    value: res\r\n  }\r\n}\r\n\r\nfunction handleGetUrl(req, path){\r\n  let string = \"\"\r\n  for (let i = 0; i<urlObject[req].length; i++){\r\n    if(urlObject[req][i] === path[i]){\r\n        string = string + path[i]\r\n    }\r\n  }\r\n  if (string === urlObject[req]){\r\n    return true\r\n  }\r\n}\r\n\r\n\r\n  ","import React, { useState, useEffect } from \"react\";\r\nimport { withRouter, Switch, Route, } from \"react-router-dom\";\r\nimport \"antd/dist/antd.css\";\r\nimport { Layout } from \"antd\"; \r\nimport Main from \"./components/Main/Main\";\r\nimport NavTop from \"./components/Layout/NavTop\";\r\nimport NavSide from \"./components/Layout/NavSide\";\r\nimport { InvestorsTableResults } from \"./containers/Investors/InvestorsContainer\"\r\nimport { LoginContainer } from \"./containers/Main/LoginContainer\" \r\nimport { FundsContainer } from \"./containers/Funds/FundsContainer\";\r\nimport { InvestorsInvIDContainer } from './containers/Investors/InvestorsInvIDContainer'\r\nimport { fetchStaticObject } from './actions/get'\r\nconst { Content} = Layout;\r\n\r\nconst App =(props)=> {\r\n  //Keep track of loginstatus and url history\r\n  const [loginStatus, loginStatusSet] = useState()\r\n  const [browserHistory, browserHistorySet] = useState(props.history.location)\r\n  \r\n  //After login getComponents is called to retreive API fetch requests\r\n  //Loops through object containing GET urls and executes API request \r\n  const getComponents =()=>{\r\n    for (let object in fetchStaticObject){\r\n      props.handleStaticGet(object)\r\n    }\r\n  }\r\n\r\n  //Updates browser history on change then reloads investory query\r\n    if(browserHistory != props.history.location){\r\n      browserHistorySet(props.history.location)\r\n    }\r\n  \r\n  useEffect(()=>{\r\n    props.handleVariableGet('loadInvestorsInvID', browserHistory.pathname)\r\n    props.handleVariableGet('loadInvestorsInvIDTest', browserHistory.pathname)\r\n  },[browserHistory])\r\n\r\n  //Only runs one page refresh and locks out user\r\n  useEffect(()=>{\r\n    loginStatusSet(loggedout)\r\n  },[])\r\n\r\n  //called if login api provides response\r\n  const handleLogin = ()=>{\r\n    getComponents()\r\n    loginStatusSet(loggedin())\r\n  }\r\n  //result if logged in\r\n  const loggedin=()=>{\r\n    return(\r\n    <Layout style={{ minHeight: \"100vh\", overflowX: 'hidden' }}>\r\n      <NavTop location={props.history}/>\r\n      <div id='container' style={{display: 'flex'}}>\r\n      <NavSide />\r\n      <Switch>\r\n        <Content style={{marginLeft: 10}}>\r\n          <Route path=\"/\" exact component={Main} />\r\n          <Route path=\"/funds\" component={FundsContainer} />\r\n          <Route path=\"/investors\" exact component={InvestorsTableResults} />\r\n          <Route path=\"/investors/table\" exact component={InvestorsTableResults} />\r\n          <Route path=\"/invid/:id\" component={InvestorsInvIDContainer} />\r\n          <Route path=\"/cashflows\" component={Main} />\r\n        </Content>\r\n      </Switch>\r\n    </div>\r\n    </Layout>\r\n    )\r\n  }\r\n  \r\n  //result if not logged in\r\n  const loggedout =()=>{\r\n    return(\r\n      <LoginContainer \r\n      loginValue={props.loadLogin} \r\n      handleLogin={handleLogin} \r\n      />\r\n    )\r\n  }\r\n    return (\r\n      <div>\r\n        {loginStatus}\r\n      </div>    \r\n\r\n    );\r\n}\r\n\r\nexport default withRouter(App);\r\n\r\n\r\n/*\r\nRemoved Date: 9/25/2019\r\nReason: Replaced with loop to prevent needing to update AppContainer\r\n*/\r\n\r\n// const getComponents =()=>{\r\n//   props.loadFunds();\r\n//   props.loadFundsSize();\r\n//   props.loadInvestors();\r\n//   props.loadInvestments();\r\n//   props.loadDistributions();\r\n//   props.loadInvestorsInvID();\r\n//   props.loadcfTotals();\r\n//   props.loadDistributionsByFund();\r\n// }\r\n\r\n// useEffect(()=>{\r\n//   props.loadInvestorsInvIDTest()\r\n//   props.loadInvestorsInvID();\r\n// },[browserHistory])\r\n\r\n//if(props.history.location.pathname.slice(0,17) === \"/invid/\" || props.history.location.pathname.slice(0,15) === \"/investors/vid/\"){","/*\r\nCreated Date:   Inception\r\nAuthor:         Betori\r\nReason:         Maps all GET requests to App container\r\nTools:          Redux\r\nLast Updated:   9/25/2019\r\nPurpose:        Uses generic function to handle all GET requests. This no longer needs to be updated with each new API request\r\n*/\r\n\r\nimport App from '../App'\r\nimport './App.css'\r\nimport { connect } from 'react-redux'\r\nimport { handleStaticGet, handleVariableGet } from '../actions/get'\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    handleStaticGet: function (req) {\r\n      dispatch(handleStaticGet(req))\r\n    },\r\n    handleVariableGet: function (req, path) {\r\n      dispatch(handleVariableGet(req, path))\r\n    },\r\n   }\r\n}\r\n\r\nexport default connect(null,mapDispatchToProps)(App)\r\n\r\n/*\r\nRemoved Date: 9/25/2019\r\nReason: Replaced with loop to prevent needing to update AppContainer\r\n*/\r\n    // import {loadInvestorsInvIDTest, loadLogin, loadDistributionsByFund, loadFunds, loadFundsSize, loadInvestments, loadDistributions,\r\n    //        loadInvestors, loadInvestorsInvID, updateInvestorCashFlow,loadcfTotals} from \"./actions/actions\";\r\n\r\n    // loadFunds: function () {\r\n    //   dispatch(loadFunds())\r\n    // },\r\n    // loadFundsSize: function () {\r\n    //   dispatch(loadFundsSize())\r\n    // },\r\n    // loadInvestments: function () {\r\n    //   dispatch(loadInvestments())\r\n    // },\r\n    // loadDistributions: function () {\r\n    //   dispatch(loadDistributions())\r\n    // },\r\n    // loadInvestors: function () {\r\n    //   dispatch(loadInvestors())\r\n    // },\r\n    // loadInvestorsInvID: function () {\r\n    //   dispatch(loadInvestorsInvID())\r\n    // },\r\n    // loadcfTotals:function(result){\r\n    //   dispatch(loadcfTotals(result))\r\n    // },\r\n    // loadDistributionsByFund:function(result){\r\n    //   dispatch(loadDistributionsByFund(result))\r\n    // },\r\n    // loadLogin:function(result){\r\n    //   dispatch(loadLogin(result))\r\n    // },\r\n    // loadInvestorsInvIDTest:function(result){\r\n    //   dispatch(loadInvestorsInvIDTest(result))\r\n    // }","import {combineReducers} from \"redux\";\r\nimport update from 'react-addons-update';\r\n\r\nfunction loginState(state = {}, action) {\r\n  if (action.type === \"LOGIN_LOADED\") {\r\n    return action.value\r\n  }\r\n  return state;\r\n}\r\n\r\nfunction funds(state = [], action) {\r\n  if (action.type === \"FUNDS_LOADED\") {\r\n    return action.value;\r\n  }\r\n  return state;\r\n}\r\n\r\nfunction fundsSize(state = [], action) {\r\n  if (action.type === \"FUNDS_SIZE_LOADED\") {\r\n    return action.value;\r\n  }\r\n  return state;\r\n}\r\n\r\nfunction investments(state =[], action){\r\n  if (action.type === 'INVESTMENTS_LOADED'){\r\n    return action.value\r\n  }\r\n  return state\r\n}\r\n\r\nfunction distributions(state =[], action){\r\n  if (action.type === 'DISTRIBUTIONS_LOADED'){\r\n    return action.value\r\n  }\r\n  return state\r\n}\r\n\r\nfunction cfTotals(state =[], action){\r\n  if (action.type === 'CFTOTALS_LOADED'){\r\n    return action.value\r\n  }\r\n  return state\r\n}\r\n\r\nfunction investors(state =[], action){\r\n  if (action.type === 'INVESTORS_LOADED'){\r\n    return action.value\r\n  }\r\n  return state\r\n}\r\n\r\nfunction investorsInvID(state =[], action){\r\n  if (action.type === 'INVESTORS_INVID_LOADED'){\r\n    return action.value\r\n  }else if (action.type === 'INVESTORS_INVID_LOADED_UPDATE'){\r\n    let cash = state[0].cashflows\r\n    //just looping through cash\r\n    for (let element in cash){\r\n      if(cash[element].ID === action.value.ID){\r\n        //React feature that makes updating nested state objects easier\r\n        return update(state, {\r\n          0: {cashflows: {[element]: {$set: action.value}}}\r\n        })\r\n      }\r\n    }\r\n    }else if (action.type === 'INVESTORS_INVID_LOADED_UPDATE_DETAIL'){\r\n      let details = state[0].details\r\n      for (let element in details){\r\n        if(details[element].ID === action.value.ID){\r\n          return update(state, {\r\n            0: {details: {[element]: {$set: action.value}}}\r\n          })\r\n        }\r\n      }\r\n    }\r\n  return state\r\n}\r\n\r\nfunction investorTest(state =[], action){\r\n  if (action.type === 'INVESTORS_INVID_LOADED_TEST'){\r\n    return action.value\r\n  }\r\n  return state\r\n}\r\n\r\nfunction distributionsFund(state =[], action){\r\n  if (action.type === 'DISTRIBUTIONS_LOADED_FUNDS'){\r\n    return action.value\r\n  }\r\n  return state\r\n}\r\n\r\nconst rootReducer = combineReducers({\r\n  loginState, funds, fundsSize, investments, distributions, investors, investorsInvID, cfTotals, distributionsFund, investorTest\r\n  });\r\n  export default rootReducer;","import reducers from \"../reducers/reducers\";\r\nimport {createStore, applyMiddleware, compose} from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst composeEnhancers =\r\n typeof window === \"object\" &&\r\n window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\r\n   window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({}) : compose;\r\n   \r\nconst enhancer = composeEnhancers(\r\n applyMiddleware(thunk)\r\n);\r\nconst store = createStore(reducers,enhancer);\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport * as serviceWorker from './support/serviceWorker';\r\nimport AppContainer from './support/AppContainer'\r\nimport store from './support/store'\r\nimport { Provider } from 'react-redux'\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\n\r\nReactDOM.render(\r\n<Provider store={store}>\r\n    <BrowserRouter>\r\n        <AppContainer/>\r\n    </BrowserRouter>\r\n</Provider>\r\n, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}